Terminals unused in grammar

    TOK_ERROR


Grammar

    0 $accept: programa $end

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main sentencias final '}'

    2 iniciar: %empty

    3 final: %empty

    4 dec_vars: %empty

    5 wrt_main: %empty

    6 declaraciones: declaracion
    7              | declaracion declaraciones

    8 declaracion: clase identificadores ';'

    9 clase: clase_escalar
   10      | clase_vector

   11 clase_escalar: tipo

   12 tipo: TOK_INT
   13     | TOK_BOOLEAN

   14 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']'

   15 identificadores: identificador_new
   16                | identificador_new ',' identificadores

   17 funciones: funcion funciones
   18          | %empty

   19 funcion: TOK_FUNCTION tipo identificador_use '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

   20 parametros_funcion: parametro_funcion resto_parametros_funcion
   21                   | %empty

   22 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   23                         | %empty

   24 idpf: identificador_use

   25 parametro_funcion: tipo idpf

   26 declaraciones_funcion: declaraciones
   27                      | %empty

   28 sentencias: sentencia
   29           | sentencia sentencias

   30 sentencia: sentencia_simple ';'
   31          | bloque

   32 sentencia_simple: asignacion
   33                 | lectura
   34                 | escritura
   35                 | retorno_funcion

   36 bloque: condicional
   37       | bucle

   38 asignacion: identificador_use '=' exp
   39           | elemento_vector '=' exp

   40 elemento_vector: identificador_use '[' exp ']'

   41 condicional: TOK_IF '(' exp ')' '{' sentencias '}'
   42            | TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

   43 bucle: TOK_WHILE '(' exp ')' '{' sentencias '}'

   44 lectura: TOK_SCANF identificador_use

   45 escritura: TOK_PRINTF exp

   46 retorno_funcion: TOK_RETURN exp

   47 exp: exp '+' exp
   48    | exp '-' exp
   49    | exp '/' exp
   50    | exp '*' exp
   51    | '-' exp
   52    | exp TOK_AND exp
   53    | exp TOK_OR exp
   54    | '!' exp
   55    | identificador_use
   56    | constante
   57    | '(' exp ')'
   58    | '(' comparacion ')'
   59    | elemento_vector
   60    | identificador_use '(' lista_expresiones ')'

   61 lista_expresiones: exp resto_lista_expresiones
   62                  | %empty

   63 resto_lista_expresiones: ',' exp resto_lista_expresiones
   64                        | %empty

   65 comparacion: exp TOK_IGUAL exp
   66            | exp TOK_DISTINTO exp
   67            | exp TOK_MENORIGUAL exp
   68            | exp TOK_MAYORIGUAL exp
   69            | exp '<' exp
   70            | exp '>' exp

   71 constante: constante_logica
   72          | constante_entera

   73 constante_logica: TOK_TRUE
   74                 | TOK_FALSE

   75 constante_entera: TOK_CONSTANTE_ENTERA

   76 identificador_use: TOK_IDENTIFICADOR

   77 identificador_new: TOK_IDENTIFICADOR


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 54
    '(' (40) 19 41 42 43 57 58 60
    ')' (41) 19 41 42 43 57 58 60
    '*' (42) 50
    '+' (43) 47
    ',' (44) 16 63
    '-' (45) 48 51
    '/' (47) 49
    ';' (59) 8 22 30
    '<' (60) 69
    '=' (61) 38 39
    '>' (62) 70
    '[' (91) 14 40
    ']' (93) 14 40
    '{' (123) 1 19 41 42 43
    '}' (125) 1 19 41 42 43
    error (256)
    TOK_MAIN (258) 1
    TOK_INT (259) 12
    TOK_BOOLEAN (260) 13
    TOK_ARRAY (261) 14
    TOK_FUNCTION (262) 19
    TOK_IF (263) 41 42
    TOK_ELSE (264) 42
    TOK_WHILE (265) 43
    TOK_SCANF (266) 44
    TOK_PRINTF (267) 45
    TOK_RETURN (268) 46
    TOK_AND (269) 52
    TOK_OR (270) 53
    TOK_IGUAL (271) 65
    TOK_DISTINTO (272) 66
    TOK_MENORIGUAL (273) 67
    TOK_MAYORIGUAL (274) 68
    TOK_IDENTIFICADOR <atributos> (275) 76 77
    TOK_CONSTANTE_ENTERA <atributos> (276) 14 75
    TOK_TRUE (277) 73
    TOK_FALSE (278) 74
    TOK_ERROR (279)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    programa (42)
        on left: 1
        on right: 0
    iniciar (43)
        on left: 2
        on right: 1
    final (44)
        on left: 3
        on right: 1
    dec_vars (45)
        on left: 4
        on right: 1
    wrt_main (46)
        on left: 5
        on right: 1
    declaraciones (47)
        on left: 6 7
        on right: 1 7 26
    declaracion (48)
        on left: 8
        on right: 6 7
    clase (49)
        on left: 9 10
        on right: 8
    clase_escalar (50)
        on left: 11
        on right: 9
    tipo (51)
        on left: 12 13
        on right: 11 14 19 25
    clase_vector (52)
        on left: 14
        on right: 10
    identificadores (53)
        on left: 15 16
        on right: 8 16
    funciones (54)
        on left: 17 18
        on right: 1 17
    funcion <atributos> (55)
        on left: 19
        on right: 17
    parametros_funcion (56)
        on left: 20 21
        on right: 19
    resto_parametros_funcion (57)
        on left: 22 23
        on right: 20 22
    idpf <atributos> (58)
        on left: 24
        on right: 25
    parametro_funcion (59)
        on left: 25
        on right: 20 22
    declaraciones_funcion (60)
        on left: 26 27
        on right: 19
    sentencias (61)
        on left: 28 29
        on right: 1 19 29 41 42 43
    sentencia (62)
        on left: 30 31
        on right: 28 29
    sentencia_simple (63)
        on left: 32 33 34 35
        on right: 30
    bloque (64)
        on left: 36 37
        on right: 31
    asignacion (65)
        on left: 38 39
        on right: 32
    elemento_vector <atributos> (66)
        on left: 40
        on right: 39 59
    condicional <atributos> (67)
        on left: 41 42
        on right: 36
    bucle <atributos> (68)
        on left: 43
        on right: 37
    lectura (69)
        on left: 44
        on right: 33
    escritura (70)
        on left: 45
        on right: 34
    retorno_funcion (71)
        on left: 46
        on right: 35
    exp <atributos> (72)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60
        on right: 38 39 40 41 42 43 45 46 47 48 49 50 51 52 53 54 57 61 63 65 66 67 68 69 70
    lista_expresiones <atributos> (73)
        on left: 61 62
        on right: 60
    resto_lista_expresiones <atributos> (74)
        on left: 63 64
        on right: 61 63
    comparacion <atributos> (75)
        on left: 65 66 67 68 69 70
        on right: 58
    constante <atributos> (76)
        on left: 71 72
        on right: 56
    constante_logica <atributos> (77)
        on left: 73 74
        on right: 71
    constante_entera <atributos> (78)
        on left: 75
        on right: 72
    identificador_use <atributos> (79)
        on left: 76
        on right: 19 24 38 40 44 55 60
    identificador_new <atributos> (80)
        on left: 77
        on right: 15 16


State 0

    0 $accept: . programa $end

    TOK_MAIN  shift, and go to state 1

    programa  go to state 2


State 1

    1 programa: TOK_MAIN . '{' iniciar declaraciones dec_vars funciones wrt_main sentencias final '}'

    '{'  shift, and go to state 3


State 2

    0 $accept: programa . $end

    $end  shift, and go to state 4


State 3

    1 programa: TOK_MAIN '{' . iniciar declaraciones dec_vars funciones wrt_main sentencias final '}'

    $default  reduce using rule 2 (iniciar)

    iniciar  go to state 5


State 4

    0 $accept: programa $end .

    $default  accept


State 5

    1 programa: TOK_MAIN '{' iniciar . declaraciones dec_vars funciones wrt_main sentencias final '}'

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7
    TOK_ARRAY    shift, and go to state 8

    declaraciones  go to state 9
    declaracion    go to state 10
    clase          go to state 11
    clase_escalar  go to state 12
    tipo           go to state 13
    clase_vector   go to state 14


State 6

   12 tipo: TOK_INT .

    $default  reduce using rule 12 (tipo)


State 7

   13 tipo: TOK_BOOLEAN .

    $default  reduce using rule 13 (tipo)


State 8

   14 clase_vector: TOK_ARRAY . tipo '[' TOK_CONSTANTE_ENTERA ']'

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7

    tipo  go to state 15


State 9

    1 programa: TOK_MAIN '{' iniciar declaraciones . dec_vars funciones wrt_main sentencias final '}'

    $default  reduce using rule 4 (dec_vars)

    dec_vars  go to state 16


State 10

    6 declaraciones: declaracion .
    7              | declaracion . declaraciones

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7
    TOK_ARRAY    shift, and go to state 8

    $default  reduce using rule 6 (declaraciones)

    declaraciones  go to state 17
    declaracion    go to state 10
    clase          go to state 11
    clase_escalar  go to state 12
    tipo           go to state 13
    clase_vector   go to state 14


State 11

    8 declaracion: clase . identificadores ';'

    TOK_IDENTIFICADOR  shift, and go to state 18

    identificadores    go to state 19
    identificador_new  go to state 20


State 12

    9 clase: clase_escalar .

    $default  reduce using rule 9 (clase)


State 13

   11 clase_escalar: tipo .

    $default  reduce using rule 11 (clase_escalar)


State 14

   10 clase: clase_vector .

    $default  reduce using rule 10 (clase)


State 15

   14 clase_vector: TOK_ARRAY tipo . '[' TOK_CONSTANTE_ENTERA ']'

    '['  shift, and go to state 21


State 16

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars . funciones wrt_main sentencias final '}'

    TOK_FUNCTION  shift, and go to state 22

    $default  reduce using rule 18 (funciones)

    funciones  go to state 23
    funcion    go to state 24


State 17

    7 declaraciones: declaracion declaraciones .

    $default  reduce using rule 7 (declaraciones)


State 18

   77 identificador_new: TOK_IDENTIFICADOR .

    $default  reduce using rule 77 (identificador_new)


State 19

    8 declaracion: clase identificadores . ';'

    ';'  shift, and go to state 25


State 20

   15 identificadores: identificador_new .
   16                | identificador_new . ',' identificadores

    ','  shift, and go to state 26

    $default  reduce using rule 15 (identificadores)


State 21

   14 clase_vector: TOK_ARRAY tipo '[' . TOK_CONSTANTE_ENTERA ']'

    TOK_CONSTANTE_ENTERA  shift, and go to state 27


State 22

   19 funcion: TOK_FUNCTION . tipo identificador_use '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7

    tipo  go to state 28


State 23

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones . wrt_main sentencias final '}'

    $default  reduce using rule 5 (wrt_main)

    wrt_main  go to state 29


State 24

   17 funciones: funcion . funciones

    TOK_FUNCTION  shift, and go to state 22

    $default  reduce using rule 18 (funciones)

    funciones  go to state 30
    funcion    go to state 24


State 25

    8 declaracion: clase identificadores ';' .

    $default  reduce using rule 8 (declaracion)


State 26

   16 identificadores: identificador_new ',' . identificadores

    TOK_IDENTIFICADOR  shift, and go to state 18

    identificadores    go to state 31
    identificador_new  go to state 20


State 27

   14 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA . ']'

    ']'  shift, and go to state 32


State 28

   19 funcion: TOK_FUNCTION tipo . identificador_use '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 33

    identificador_use  go to state 34


State 29

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main . sentencias final '}'

    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36
    TOK_SCANF          shift, and go to state 37
    TOK_PRINTF         shift, and go to state 38
    TOK_RETURN         shift, and go to state 39
    TOK_IDENTIFICADOR  shift, and go to state 33

    sentencias         go to state 40
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    bucle              go to state 47
    lectura            go to state 48
    escritura          go to state 49
    retorno_funcion    go to state 50
    identificador_use  go to state 51


State 30

   17 funciones: funcion funciones .

    $default  reduce using rule 17 (funciones)


State 31

   16 identificadores: identificador_new ',' identificadores .

    $default  reduce using rule 16 (identificadores)


State 32

   14 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']' .

    $default  reduce using rule 14 (clase_vector)


State 33

   76 identificador_use: TOK_IDENTIFICADOR .

    $default  reduce using rule 76 (identificador_use)


State 34

   19 funcion: TOK_FUNCTION tipo identificador_use . '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    '('  shift, and go to state 52


State 35

   41 condicional: TOK_IF . '(' exp ')' '{' sentencias '}'
   42            | TOK_IF . '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '('  shift, and go to state 53


State 36

   43 bucle: TOK_WHILE . '(' exp ')' '{' sentencias '}'

    '('  shift, and go to state 54


State 37

   44 lectura: TOK_SCANF . identificador_use

    TOK_IDENTIFICADOR  shift, and go to state 33

    identificador_use  go to state 55


State 38

   45 escritura: TOK_PRINTF . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 63
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 39

   46 retorno_funcion: TOK_RETURN . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 68
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 40

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main sentencias . final '}'

    $default  reduce using rule 3 (final)

    final  go to state 69


State 41

   28 sentencias: sentencia .
   29           | sentencia . sentencias

    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36
    TOK_SCANF          shift, and go to state 37
    TOK_PRINTF         shift, and go to state 38
    TOK_RETURN         shift, and go to state 39
    TOK_IDENTIFICADOR  shift, and go to state 33

    $default  reduce using rule 28 (sentencias)

    sentencias         go to state 70
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    bucle              go to state 47
    lectura            go to state 48
    escritura          go to state 49
    retorno_funcion    go to state 50
    identificador_use  go to state 51


State 42

   30 sentencia: sentencia_simple . ';'

    ';'  shift, and go to state 71


State 43

   31 sentencia: bloque .

    $default  reduce using rule 31 (sentencia)


State 44

   32 sentencia_simple: asignacion .

    $default  reduce using rule 32 (sentencia_simple)


State 45

   39 asignacion: elemento_vector . '=' exp

    '='  shift, and go to state 72


State 46

   36 bloque: condicional .

    $default  reduce using rule 36 (bloque)


State 47

   37 bloque: bucle .

    $default  reduce using rule 37 (bloque)


State 48

   33 sentencia_simple: lectura .

    $default  reduce using rule 33 (sentencia_simple)


State 49

   34 sentencia_simple: escritura .

    $default  reduce using rule 34 (sentencia_simple)


State 50

   35 sentencia_simple: retorno_funcion .

    $default  reduce using rule 35 (sentencia_simple)


State 51

   38 asignacion: identificador_use . '=' exp
   40 elemento_vector: identificador_use . '[' exp ']'

    '['  shift, and go to state 73
    '='  shift, and go to state 74


State 52

   19 funcion: TOK_FUNCTION tipo identificador_use '(' . parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7

    $default  reduce using rule 21 (parametros_funcion)

    tipo                go to state 75
    parametros_funcion  go to state 76
    parametro_funcion   go to state 77


State 53

   41 condicional: TOK_IF '(' . exp ')' '{' sentencias '}'
   42            | TOK_IF '(' . exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 78
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 54

   43 bucle: TOK_WHILE '(' . exp ')' '{' sentencias '}'

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 79
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 55

   44 lectura: TOK_SCANF identificador_use .

    $default  reduce using rule 44 (lectura)


State 56

   75 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce using rule 75 (constante_entera)


State 57

   73 constante_logica: TOK_TRUE .

    $default  reduce using rule 73 (constante_logica)


State 58

   74 constante_logica: TOK_FALSE .

    $default  reduce using rule 74 (constante_logica)


State 59

   54 exp: '!' . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 80
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 60

   51 exp: '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 81
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 61

   57 exp: '(' . exp ')'
   58    | '(' . comparacion ')'

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 82
    comparacion        go to state 83
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 62

   59 exp: elemento_vector .

    $default  reduce using rule 59 (exp)


State 63

   45 escritura: TOK_PRINTF exp .
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89

    $default  reduce using rule 45 (escritura)


State 64

   56 exp: constante .

    $default  reduce using rule 56 (exp)


State 65

   71 constante: constante_logica .

    $default  reduce using rule 71 (constante)


State 66

   72 constante: constante_entera .

    $default  reduce using rule 72 (constante)


State 67

   40 elemento_vector: identificador_use . '[' exp ']'
   55 exp: identificador_use .
   60    | identificador_use . '(' lista_expresiones ')'

    '['  shift, and go to state 73
    '('  shift, and go to state 90

    $default  reduce using rule 55 (exp)


State 68

   46 retorno_funcion: TOK_RETURN exp .
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89

    $default  reduce using rule 46 (retorno_funcion)


State 69

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main sentencias final . '}'

    '}'  shift, and go to state 91


State 70

   29 sentencias: sentencia sentencias .

    $default  reduce using rule 29 (sentencias)


State 71

   30 sentencia: sentencia_simple ';' .

    $default  reduce using rule 30 (sentencia)


State 72

   39 asignacion: elemento_vector '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 92
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 73

   40 elemento_vector: identificador_use '[' . exp ']'

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 93
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 74

   38 asignacion: identificador_use '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 94
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 75

   25 parametro_funcion: tipo . idpf

    TOK_IDENTIFICADOR  shift, and go to state 33

    idpf               go to state 95
    identificador_use  go to state 96


State 76

   19 funcion: TOK_FUNCTION tipo identificador_use '(' parametros_funcion . ')' '{' declaraciones_funcion sentencias '}'

    ')'  shift, and go to state 97


State 77

   20 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 98

    $default  reduce using rule 23 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 99


State 78

   41 condicional: TOK_IF '(' exp . ')' '{' sentencias '}'
   42            | TOK_IF '(' exp . ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89
    ')'      shift, and go to state 100


State 79

   43 bucle: TOK_WHILE '(' exp . ')' '{' sentencias '}'
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89
    ')'      shift, and go to state 101


State 80

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp
   54    | '!' exp .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 54 (exp)


State 81

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   51    | '-' exp .
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 51 (exp)


State 82

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp
   57    | '(' exp . ')'
   65 comparacion: exp . TOK_IGUAL exp
   66            | exp . TOK_DISTINTO exp
   67            | exp . TOK_MENORIGUAL exp
   68            | exp . TOK_MAYORIGUAL exp
   69            | exp . '<' exp
   70            | exp . '>' exp

    TOK_AND         shift, and go to state 84
    TOK_OR          shift, and go to state 85
    TOK_IGUAL       shift, and go to state 102
    TOK_DISTINTO    shift, and go to state 103
    TOK_MENORIGUAL  shift, and go to state 104
    TOK_MAYORIGUAL  shift, and go to state 105
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '*'             shift, and go to state 88
    '/'             shift, and go to state 89
    ')'             shift, and go to state 106
    '<'             shift, and go to state 107
    '>'             shift, and go to state 108


State 83

   58 exp: '(' comparacion . ')'

    ')'  shift, and go to state 109


State 84

   52 exp: exp TOK_AND . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 110
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 85

   53 exp: exp TOK_OR . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 111
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 86

   47 exp: exp '+' . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 112
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 87

   48 exp: exp '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 113
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 88

   50 exp: exp '*' . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 114
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 89

   49 exp: exp '/' . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 115
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 90

   60 exp: identificador_use '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    $default  reduce using rule 62 (lista_expresiones)

    elemento_vector    go to state 62
    exp                go to state 116
    lista_expresiones  go to state 117
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 91

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main sentencias final '}' .

    $default  reduce using rule 1 (programa)


State 92

   39 asignacion: elemento_vector '=' exp .
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89

    $default  reduce using rule 39 (asignacion)


State 93

   40 elemento_vector: identificador_use '[' exp . ']'
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89
    ']'      shift, and go to state 118


State 94

   38 asignacion: identificador_use '=' exp .
   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89

    $default  reduce using rule 38 (asignacion)


State 95

   25 parametro_funcion: tipo idpf .

    $default  reduce using rule 25 (parametro_funcion)


State 96

   24 idpf: identificador_use .

    $default  reduce using rule 24 (idpf)


State 97

   19 funcion: TOK_FUNCTION tipo identificador_use '(' parametros_funcion ')' . '{' declaraciones_funcion sentencias '}'

    '{'  shift, and go to state 119


State 98

   22 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7

    tipo               go to state 75
    parametro_funcion  go to state 120


State 99

   20 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 20 (parametros_funcion)


State 100

   41 condicional: TOK_IF '(' exp ')' . '{' sentencias '}'
   42            | TOK_IF '(' exp ')' . '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '{'  shift, and go to state 121


State 101

   43 bucle: TOK_WHILE '(' exp ')' . '{' sentencias '}'

    '{'  shift, and go to state 122


State 102

   65 comparacion: exp TOK_IGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 123
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 103

   66 comparacion: exp TOK_DISTINTO . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 124
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 104

   67 comparacion: exp TOK_MENORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 125
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 105

   68 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 126
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 106

   57 exp: '(' exp ')' .

    $default  reduce using rule 57 (exp)


State 107

   69 comparacion: exp '<' . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 127
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 108

   70 comparacion: exp '>' . exp

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 128
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 109

   58 exp: '(' comparacion ')' .

    $default  reduce using rule 58 (exp)


State 110

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   52    | exp TOK_AND exp .
   53    | exp . TOK_OR exp

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 52 (exp)


State 111

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp
   53    | exp TOK_OR exp .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 53 (exp)


State 112

   47 exp: exp . '+' exp
   47    | exp '+' exp .
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 47 (exp)


State 113

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   48    | exp '-' exp .
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 48 (exp)


State 114

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   50    | exp '*' exp .
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    $default  reduce using rule 50 (exp)


State 115

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   49    | exp '/' exp .
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp

    $default  reduce using rule 49 (exp)


State 116

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp
   61 lista_expresiones: exp . resto_lista_expresiones

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89
    ','      shift, and go to state 129

    $default  reduce using rule 64 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 130


State 117

   60 exp: identificador_use '(' lista_expresiones . ')'

    ')'  shift, and go to state 131


State 118

   40 elemento_vector: identificador_use '[' exp ']' .

    $default  reduce using rule 40 (elemento_vector)


State 119

   19 funcion: TOK_FUNCTION tipo identificador_use '(' parametros_funcion ')' '{' . declaraciones_funcion sentencias '}'

    TOK_INT      shift, and go to state 6
    TOK_BOOLEAN  shift, and go to state 7
    TOK_ARRAY    shift, and go to state 8

    $default  reduce using rule 27 (declaraciones_funcion)

    declaraciones          go to state 132
    declaracion            go to state 10
    clase                  go to state 11
    clase_escalar          go to state 12
    tipo                   go to state 13
    clase_vector           go to state 14
    declaraciones_funcion  go to state 133


State 120

   22 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 98

    $default  reduce using rule 23 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 134


State 121

   41 condicional: TOK_IF '(' exp ')' '{' . sentencias '}'
   42            | TOK_IF '(' exp ')' '{' . sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36
    TOK_SCANF          shift, and go to state 37
    TOK_PRINTF         shift, and go to state 38
    TOK_RETURN         shift, and go to state 39
    TOK_IDENTIFICADOR  shift, and go to state 33

    sentencias         go to state 135
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    bucle              go to state 47
    lectura            go to state 48
    escritura          go to state 49
    retorno_funcion    go to state 50
    identificador_use  go to state 51


State 122

   43 bucle: TOK_WHILE '(' exp ')' '{' . sentencias '}'

    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36
    TOK_SCANF          shift, and go to state 37
    TOK_PRINTF         shift, and go to state 38
    TOK_RETURN         shift, and go to state 39
    TOK_IDENTIFICADOR  shift, and go to state 33

    sentencias         go to state 136
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    bucle              go to state 47
    lectura            go to state 48
    escritura          go to state 49
    retorno_funcion    go to state 50
    identificador_use  go to state 51


State 123

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp
   65 comparacion: exp TOK_IGUAL exp .

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89

    $default  reduce using rule 65 (comparacion)


State 124

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp
   66 comparacion: exp TOK_DISTINTO exp .

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89

    $default  reduce using rule 66 (comparacion)


State 125

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp
   67 comparacion: exp TOK_MENORIGUAL exp .

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89

    $default  reduce using rule 67 (comparacion)


State 126

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp
   68 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89

    $default  reduce using rule 68 (comparacion)


State 127

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp
   69 comparacion: exp '<' exp .

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89

    $default  reduce using rule 69 (comparacion)


State 128

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp
   70 comparacion: exp '>' exp .

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89

    $default  reduce using rule 70 (comparacion)


State 129

   63 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_IDENTIFICADOR     shift, and go to state 33
    TOK_CONSTANTE_ENTERA  shift, and go to state 56
    TOK_TRUE              shift, and go to state 57
    TOK_FALSE             shift, and go to state 58
    '!'                   shift, and go to state 59
    '-'                   shift, and go to state 60
    '('                   shift, and go to state 61

    elemento_vector    go to state 62
    exp                go to state 137
    constante          go to state 64
    constante_logica   go to state 65
    constante_entera   go to state 66
    identificador_use  go to state 67


State 130

   61 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce using rule 61 (lista_expresiones)


State 131

   60 exp: identificador_use '(' lista_expresiones ')' .

    $default  reduce using rule 60 (exp)


State 132

   26 declaraciones_funcion: declaraciones .

    $default  reduce using rule 26 (declaraciones_funcion)


State 133

   19 funcion: TOK_FUNCTION tipo identificador_use '(' parametros_funcion ')' '{' declaraciones_funcion . sentencias '}'

    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36
    TOK_SCANF          shift, and go to state 37
    TOK_PRINTF         shift, and go to state 38
    TOK_RETURN         shift, and go to state 39
    TOK_IDENTIFICADOR  shift, and go to state 33

    sentencias         go to state 138
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    bucle              go to state 47
    lectura            go to state 48
    escritura          go to state 49
    retorno_funcion    go to state 50
    identificador_use  go to state 51


State 134

   22 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 22 (resto_parametros_funcion)


State 135

   41 condicional: TOK_IF '(' exp ')' '{' sentencias . '}'
   42            | TOK_IF '(' exp ')' '{' sentencias . '}' TOK_ELSE '{' sentencias '}'

    '}'  shift, and go to state 139


State 136

   43 bucle: TOK_WHILE '(' exp ')' '{' sentencias . '}'

    '}'  shift, and go to state 140


State 137

   47 exp: exp . '+' exp
   48    | exp . '-' exp
   49    | exp . '/' exp
   50    | exp . '*' exp
   52    | exp . TOK_AND exp
   53    | exp . TOK_OR exp
   63 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_AND  shift, and go to state 84
    TOK_OR   shift, and go to state 85
    '+'      shift, and go to state 86
    '-'      shift, and go to state 87
    '*'      shift, and go to state 88
    '/'      shift, and go to state 89
    ','      shift, and go to state 129

    $default  reduce using rule 64 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 141


State 138

   19 funcion: TOK_FUNCTION tipo identificador_use '(' parametros_funcion ')' '{' declaraciones_funcion sentencias . '}'

    '}'  shift, and go to state 142


State 139

   41 condicional: TOK_IF '(' exp ')' '{' sentencias '}' .
   42            | TOK_IF '(' exp ')' '{' sentencias '}' . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  shift, and go to state 143

    $default  reduce using rule 41 (condicional)


State 140

   43 bucle: TOK_WHILE '(' exp ')' '{' sentencias '}' .

    $default  reduce using rule 43 (bucle)


State 141

   63 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce using rule 63 (resto_lista_expresiones)


State 142

   19 funcion: TOK_FUNCTION tipo identificador_use '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}' .

    $default  reduce using rule 19 (funcion)


State 143

   42 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE . '{' sentencias '}'

    '{'  shift, and go to state 144


State 144

   42 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' . sentencias '}'

    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36
    TOK_SCANF          shift, and go to state 37
    TOK_PRINTF         shift, and go to state 38
    TOK_RETURN         shift, and go to state 39
    TOK_IDENTIFICADOR  shift, and go to state 33

    sentencias         go to state 145
    sentencia          go to state 41
    sentencia_simple   go to state 42
    bloque             go to state 43
    asignacion         go to state 44
    elemento_vector    go to state 45
    condicional        go to state 46
    bucle              go to state 47
    lectura            go to state 48
    escritura          go to state 49
    retorno_funcion    go to state 50
    identificador_use  go to state 51


State 145

   42 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias . '}'

    '}'  shift, and go to state 146


State 146

   42 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}' .

    $default  reduce using rule 42 (condicional)

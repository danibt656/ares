// Generated by GNU Bison 3.5.1.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "src/alfa.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . programa $end\l"]
  0 -> 1 [style=solid label="TOK_MAIN"]
  0 -> 2 [style=dashed label="programa"]
  1 [label="State 1\n\l  1 programa: TOK_MAIN . '{' iniciar declaraciones dec_vars funciones wrt_main sentencias final '}'\l"]
  1 -> 3 [style=solid label="'{'"]
  2 [label="State 2\n\l  0 $accept: programa . $end\l"]
  2 -> 4 [style=solid label="$end"]
  3 [label="State 3\n\l  1 programa: TOK_MAIN '{' . iniciar declaraciones dec_vars funciones wrt_main sentencias final '}'\l"]
  3 -> 5 [style=dashed label="iniciar"]
  3 -> "3R2" [style=solid]
 "3R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  4 [label="State 4\n\l  0 $accept: programa $end .\l"]
  4 -> "4R0" [style=solid]
 "4R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  5 [label="State 5\n\l  1 programa: TOK_MAIN '{' iniciar . declaraciones dec_vars funciones wrt_main sentencias final '}'\l"]
  5 -> 6 [style=solid label="TOK_INT"]
  5 -> 7 [style=solid label="TOK_BOOLEAN"]
  5 -> 8 [style=solid label="TOK_ARRAY"]
  5 -> 9 [style=dashed label="declaraciones"]
  5 -> 10 [style=dashed label="declaracion"]
  5 -> 11 [style=dashed label="clase"]
  5 -> 12 [style=dashed label="clase_escalar"]
  5 -> 13 [style=dashed label="tipo"]
  5 -> 14 [style=dashed label="clase_vector"]
  6 [label="State 6\n\l 12 tipo: TOK_INT .\l"]
  6 -> "6R12" [style=solid]
 "6R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l 13 tipo: TOK_BOOLEAN .\l"]
  7 -> "7R13" [style=solid]
 "7R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l 14 clase_vector: TOK_ARRAY . tipo '[' TOK_CONSTANTE_ENTERA ']'\l"]
  8 -> 6 [style=solid label="TOK_INT"]
  8 -> 7 [style=solid label="TOK_BOOLEAN"]
  8 -> 15 [style=dashed label="tipo"]
  9 [label="State 9\n\l  1 programa: TOK_MAIN '{' iniciar declaraciones . dec_vars funciones wrt_main sentencias final '}'\l"]
  9 -> 16 [style=dashed label="dec_vars"]
  9 -> "9R4" [style=solid]
 "9R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l  6 declaraciones: declaracion .\l  7              | declaracion . declaraciones\l"]
  10 -> 6 [style=solid label="TOK_INT"]
  10 -> 7 [style=solid label="TOK_BOOLEAN"]
  10 -> 8 [style=solid label="TOK_ARRAY"]
  10 -> 17 [style=dashed label="declaraciones"]
  10 -> 10 [style=dashed label="declaracion"]
  10 -> 11 [style=dashed label="clase"]
  10 -> 12 [style=dashed label="clase_escalar"]
  10 -> 13 [style=dashed label="tipo"]
  10 -> 14 [style=dashed label="clase_vector"]
  10 -> "10R6" [style=solid]
 "10R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l  8 declaracion: clase . identificadores ';'\l"]
  11 -> 18 [style=solid label="TOK_IDENTIFICADOR"]
  11 -> 19 [style=dashed label="identificadores"]
  11 -> 20 [style=dashed label="identificador_new"]
  12 [label="State 12\n\l  9 clase: clase_escalar .\l"]
  12 -> "12R9" [style=solid]
 "12R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l 11 clase_escalar: tipo .\l"]
  13 -> "13R11" [style=solid]
 "13R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l 10 clase: clase_vector .\l"]
  14 -> "14R10" [style=solid]
 "14R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 14 clase_vector: TOK_ARRAY tipo . '[' TOK_CONSTANTE_ENTERA ']'\l"]
  15 -> 21 [style=solid label="'['"]
  16 [label="State 16\n\l  1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars . funciones wrt_main sentencias final '}'\l"]
  16 -> 22 [style=solid label="TOK_FUNCTION"]
  16 -> 23 [style=dashed label="funciones"]
  16 -> 24 [style=dashed label="funcion"]
  16 -> 25 [style=dashed label="fn_declaration"]
  16 -> 26 [style=dashed label="fn_name"]
  16 -> "16R18" [style=solid]
 "16R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l  7 declaraciones: declaracion declaraciones .\l"]
  17 -> "17R7" [style=solid]
 "17R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 84 identificador_new: TOK_IDENTIFICADOR .\l"]
  18 -> "18R84" [style=solid]
 "18R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l  8 declaracion: clase identificadores . ';'\l"]
  19 -> 27 [style=solid label="';'"]
  20 [label="State 20\n\l 15 identificadores: identificador_new .\l 16                | identificador_new . ',' identificadores\l"]
  20 -> 28 [style=solid label="','"]
  20 -> "20R15" [style=solid]
 "20R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l 14 clase_vector: TOK_ARRAY tipo '[' . TOK_CONSTANTE_ENTERA ']'\l"]
  21 -> 29 [style=solid label="TOK_CONSTANTE_ENTERA"]
  22 [label="State 22\n\l 21 fn_name: TOK_FUNCTION . tipo identificador_use\l"]
  22 -> 6 [style=solid label="TOK_INT"]
  22 -> 7 [style=solid label="TOK_BOOLEAN"]
  22 -> 30 [style=dashed label="tipo"]
  23 [label="State 23\n\l  1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones . wrt_main sentencias final '}'\l"]
  23 -> 31 [style=dashed label="wrt_main"]
  23 -> "23R5" [style=solid]
 "23R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  24 [label="State 24\n\l 17 funciones: funcion . funciones\l"]
  24 -> 22 [style=solid label="TOK_FUNCTION"]
  24 -> 32 [style=dashed label="funciones"]
  24 -> 24 [style=dashed label="funcion"]
  24 -> 25 [style=dashed label="fn_declaration"]
  24 -> 26 [style=dashed label="fn_name"]
  24 -> "24R18" [style=solid]
 "24R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 19 funcion: fn_declaration . sentencias '}'\l"]
  25 -> 33 [style=solid label="TOK_IF"]
  25 -> 34 [style=solid label="TOK_WHILE"]
  25 -> 35 [style=solid label="TOK_SCANF"]
  25 -> 36 [style=solid label="TOK_PRINTF"]
  25 -> 37 [style=solid label="TOK_RETURN"]
  25 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  25 -> 39 [style=dashed label="sentencias"]
  25 -> 40 [style=dashed label="sentencia"]
  25 -> 41 [style=dashed label="sentencia_simple"]
  25 -> 42 [style=dashed label="bloque"]
  25 -> 43 [style=dashed label="asignacion"]
  25 -> 44 [style=dashed label="elemento_vector"]
  25 -> 45 [style=dashed label="condicional"]
  25 -> 46 [style=dashed label="if_sentencias"]
  25 -> 47 [style=dashed label="if_exp"]
  25 -> 48 [style=dashed label="bucle"]
  25 -> 49 [style=dashed label="bucle_exp"]
  25 -> 50 [style=dashed label="bucle_tok"]
  25 -> 51 [style=dashed label="lectura"]
  25 -> 52 [style=dashed label="escritura"]
  25 -> 53 [style=dashed label="retorno_funcion"]
  25 -> 54 [style=dashed label="identificador_use"]
  26 [label="State 26\n\l 20 fn_declaration: fn_name . '(' parametros_funcion ')' '{' declaraciones_funcion\l"]
  26 -> 55 [style=solid label="'('"]
  27 [label="State 27\n\l  8 declaracion: clase identificadores ';' .\l"]
  27 -> "27R8" [style=solid]
 "27R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 16 identificadores: identificador_new ',' . identificadores\l"]
  28 -> 18 [style=solid label="TOK_IDENTIFICADOR"]
  28 -> 56 [style=dashed label="identificadores"]
  28 -> 20 [style=dashed label="identificador_new"]
  29 [label="State 29\n\l 14 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA . ']'\l"]
  29 -> 57 [style=solid label="']'"]
  30 [label="State 30\n\l 21 fn_name: TOK_FUNCTION tipo . identificador_use\l"]
  30 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  30 -> 58 [style=dashed label="identificador_use"]
  31 [label="State 31\n\l  1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main . sentencias final '}'\l"]
  31 -> 33 [style=solid label="TOK_IF"]
  31 -> 34 [style=solid label="TOK_WHILE"]
  31 -> 35 [style=solid label="TOK_SCANF"]
  31 -> 36 [style=solid label="TOK_PRINTF"]
  31 -> 37 [style=solid label="TOK_RETURN"]
  31 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  31 -> 59 [style=dashed label="sentencias"]
  31 -> 40 [style=dashed label="sentencia"]
  31 -> 41 [style=dashed label="sentencia_simple"]
  31 -> 42 [style=dashed label="bloque"]
  31 -> 43 [style=dashed label="asignacion"]
  31 -> 44 [style=dashed label="elemento_vector"]
  31 -> 45 [style=dashed label="condicional"]
  31 -> 46 [style=dashed label="if_sentencias"]
  31 -> 47 [style=dashed label="if_exp"]
  31 -> 48 [style=dashed label="bucle"]
  31 -> 49 [style=dashed label="bucle_exp"]
  31 -> 50 [style=dashed label="bucle_tok"]
  31 -> 51 [style=dashed label="lectura"]
  31 -> 52 [style=dashed label="escritura"]
  31 -> 53 [style=dashed label="retorno_funcion"]
  31 -> 54 [style=dashed label="identificador_use"]
  32 [label="State 32\n\l 17 funciones: funcion funciones .\l"]
  32 -> "32R17" [style=solid]
 "32R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 46 if_exp: TOK_IF . '(' exp ')' '{'\l"]
  33 -> 60 [style=solid label="'('"]
  34 [label="State 34\n\l 49 bucle_tok: TOK_WHILE .\l"]
  34 -> "34R49" [style=solid]
 "34R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l 50 lectura: TOK_SCANF . identificador_use\l"]
  35 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  35 -> 61 [style=dashed label="identificador_use"]
  36 [label="State 36\n\l 51 escritura: TOK_PRINTF . exp\l"]
  36 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  36 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  36 -> 63 [style=solid label="TOK_TRUE"]
  36 -> 64 [style=solid label="TOK_FALSE"]
  36 -> 65 [style=solid label="'-'"]
  36 -> 66 [style=solid label="'!'"]
  36 -> 67 [style=solid label="'('"]
  36 -> 68 [style=dashed label="elemento_vector"]
  36 -> 69 [style=dashed label="exp"]
  36 -> 70 [style=dashed label="idf_llamada_funcion"]
  36 -> 71 [style=dashed label="constante"]
  36 -> 72 [style=dashed label="constante_logica"]
  36 -> 73 [style=dashed label="constante_entera"]
  36 -> 74 [style=dashed label="identificador_use"]
  37 [label="State 37\n\l 52 retorno_funcion: TOK_RETURN . exp\l"]
  37 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  37 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  37 -> 63 [style=solid label="TOK_TRUE"]
  37 -> 64 [style=solid label="TOK_FALSE"]
  37 -> 65 [style=solid label="'-'"]
  37 -> 66 [style=solid label="'!'"]
  37 -> 67 [style=solid label="'('"]
  37 -> 68 [style=dashed label="elemento_vector"]
  37 -> 75 [style=dashed label="exp"]
  37 -> 70 [style=dashed label="idf_llamada_funcion"]
  37 -> 71 [style=dashed label="constante"]
  37 -> 72 [style=dashed label="constante_logica"]
  37 -> 73 [style=dashed label="constante_entera"]
  37 -> 74 [style=dashed label="identificador_use"]
  38 [label="State 38\n\l 83 identificador_use: TOK_IDENTIFICADOR .\l"]
  38 -> "38R83" [style=solid]
 "38R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 19 funcion: fn_declaration sentencias . '}'\l"]
  39 -> 76 [style=solid label="'}'"]
  40 [label="State 40\n\l 30 sentencias: sentencia .\l 31           | sentencia . sentencias\l"]
  40 -> 33 [style=solid label="TOK_IF"]
  40 -> 34 [style=solid label="TOK_WHILE"]
  40 -> 35 [style=solid label="TOK_SCANF"]
  40 -> 36 [style=solid label="TOK_PRINTF"]
  40 -> 37 [style=solid label="TOK_RETURN"]
  40 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  40 -> 77 [style=dashed label="sentencias"]
  40 -> 40 [style=dashed label="sentencia"]
  40 -> 41 [style=dashed label="sentencia_simple"]
  40 -> 42 [style=dashed label="bloque"]
  40 -> 43 [style=dashed label="asignacion"]
  40 -> 44 [style=dashed label="elemento_vector"]
  40 -> 45 [style=dashed label="condicional"]
  40 -> 46 [style=dashed label="if_sentencias"]
  40 -> 47 [style=dashed label="if_exp"]
  40 -> 48 [style=dashed label="bucle"]
  40 -> 49 [style=dashed label="bucle_exp"]
  40 -> 50 [style=dashed label="bucle_tok"]
  40 -> 51 [style=dashed label="lectura"]
  40 -> 52 [style=dashed label="escritura"]
  40 -> 53 [style=dashed label="retorno_funcion"]
  40 -> 54 [style=dashed label="identificador_use"]
  40 -> "40R30" [style=solid]
 "40R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 32 sentencia: sentencia_simple . ';'\l"]
  41 -> 78 [style=solid label="';'"]
  42 [label="State 42\n\l 33 sentencia: bloque .\l"]
  42 -> "42R33" [style=solid]
 "42R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l 34 sentencia_simple: asignacion .\l"]
  43 -> "43R34" [style=solid]
 "43R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 41 asignacion: elemento_vector . '=' exp\l"]
  44 -> 79 [style=solid label="'='"]
  45 [label="State 45\n\l 38 bloque: condicional .\l"]
  45 -> "45R38" [style=solid]
 "45R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 43 condicional: if_sentencias .\l 44            | if_sentencias . TOK_ELSE '{' sentencias '}'\l"]
  46 -> 80 [style=solid label="TOK_ELSE"]
  46 -> "46R43" [style=solid]
 "46R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 45 if_sentencias: if_exp . sentencias '}'\l"]
  47 -> 33 [style=solid label="TOK_IF"]
  47 -> 34 [style=solid label="TOK_WHILE"]
  47 -> 35 [style=solid label="TOK_SCANF"]
  47 -> 36 [style=solid label="TOK_PRINTF"]
  47 -> 37 [style=solid label="TOK_RETURN"]
  47 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  47 -> 81 [style=dashed label="sentencias"]
  47 -> 40 [style=dashed label="sentencia"]
  47 -> 41 [style=dashed label="sentencia_simple"]
  47 -> 42 [style=dashed label="bloque"]
  47 -> 43 [style=dashed label="asignacion"]
  47 -> 44 [style=dashed label="elemento_vector"]
  47 -> 45 [style=dashed label="condicional"]
  47 -> 46 [style=dashed label="if_sentencias"]
  47 -> 47 [style=dashed label="if_exp"]
  47 -> 48 [style=dashed label="bucle"]
  47 -> 49 [style=dashed label="bucle_exp"]
  47 -> 50 [style=dashed label="bucle_tok"]
  47 -> 51 [style=dashed label="lectura"]
  47 -> 52 [style=dashed label="escritura"]
  47 -> 53 [style=dashed label="retorno_funcion"]
  47 -> 54 [style=dashed label="identificador_use"]
  48 [label="State 48\n\l 39 bloque: bucle .\l"]
  48 -> "48R39" [style=solid]
 "48R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  49 [label="State 49\n\l 47 bucle: bucle_exp . sentencias '}'\l"]
  49 -> 33 [style=solid label="TOK_IF"]
  49 -> 34 [style=solid label="TOK_WHILE"]
  49 -> 35 [style=solid label="TOK_SCANF"]
  49 -> 36 [style=solid label="TOK_PRINTF"]
  49 -> 37 [style=solid label="TOK_RETURN"]
  49 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  49 -> 82 [style=dashed label="sentencias"]
  49 -> 40 [style=dashed label="sentencia"]
  49 -> 41 [style=dashed label="sentencia_simple"]
  49 -> 42 [style=dashed label="bloque"]
  49 -> 43 [style=dashed label="asignacion"]
  49 -> 44 [style=dashed label="elemento_vector"]
  49 -> 45 [style=dashed label="condicional"]
  49 -> 46 [style=dashed label="if_sentencias"]
  49 -> 47 [style=dashed label="if_exp"]
  49 -> 48 [style=dashed label="bucle"]
  49 -> 49 [style=dashed label="bucle_exp"]
  49 -> 50 [style=dashed label="bucle_tok"]
  49 -> 51 [style=dashed label="lectura"]
  49 -> 52 [style=dashed label="escritura"]
  49 -> 53 [style=dashed label="retorno_funcion"]
  49 -> 54 [style=dashed label="identificador_use"]
  50 [label="State 50\n\l 48 bucle_exp: bucle_tok . '(' exp ')' '{'\l"]
  50 -> 83 [style=solid label="'('"]
  51 [label="State 51\n\l 35 sentencia_simple: lectura .\l"]
  51 -> "51R35" [style=solid]
 "51R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 36 sentencia_simple: escritura .\l"]
  52 -> "52R36" [style=solid]
 "52R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 37 sentencia_simple: retorno_funcion .\l"]
  53 -> "53R37" [style=solid]
 "53R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 40 asignacion: identificador_use . '=' exp\l 42 elemento_vector: identificador_use . '[' exp ']'\l"]
  54 -> 84 [style=solid label="'['"]
  54 -> 85 [style=solid label="'='"]
  55 [label="State 55\n\l 20 fn_declaration: fn_name '(' . parametros_funcion ')' '{' declaraciones_funcion\l"]
  55 -> 6 [style=solid label="TOK_INT"]
  55 -> 7 [style=solid label="TOK_BOOLEAN"]
  55 -> 86 [style=dashed label="tipo"]
  55 -> 87 [style=dashed label="parametros_funcion"]
  55 -> 88 [style=dashed label="parametro_funcion"]
  55 -> "55R23" [style=solid]
 "55R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l 16 identificadores: identificador_new ',' identificadores .\l"]
  56 -> "56R16" [style=solid]
 "56R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l 14 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']' .\l"]
  57 -> "57R14" [style=solid]
 "57R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  58 [label="State 58\n\l 21 fn_name: TOK_FUNCTION tipo identificador_use .\l"]
  58 -> "58R21" [style=solid]
 "58R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l  1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main sentencias . final '}'\l"]
  59 -> 89 [style=dashed label="final"]
  59 -> "59R3" [style=solid]
 "59R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 46 if_exp: TOK_IF '(' . exp ')' '{'\l"]
  60 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  60 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  60 -> 63 [style=solid label="TOK_TRUE"]
  60 -> 64 [style=solid label="TOK_FALSE"]
  60 -> 65 [style=solid label="'-'"]
  60 -> 66 [style=solid label="'!'"]
  60 -> 67 [style=solid label="'('"]
  60 -> 68 [style=dashed label="elemento_vector"]
  60 -> 90 [style=dashed label="exp"]
  60 -> 70 [style=dashed label="idf_llamada_funcion"]
  60 -> 71 [style=dashed label="constante"]
  60 -> 72 [style=dashed label="constante_logica"]
  60 -> 73 [style=dashed label="constante_entera"]
  60 -> 74 [style=dashed label="identificador_use"]
  61 [label="State 61\n\l 50 lectura: TOK_SCANF identificador_use .\l"]
  61 -> "61R50" [style=solid]
 "61R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 82 constante_entera: TOK_CONSTANTE_ENTERA .\l"]
  62 -> "62R82" [style=solid]
 "62R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l 80 constante_logica: TOK_TRUE .\l"]
  63 -> "63R80" [style=solid]
 "63R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 81 constante_logica: TOK_FALSE .\l"]
  64 -> "64R81" [style=solid]
 "64R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l 57 exp: '-' . exp\l"]
  65 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  65 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  65 -> 63 [style=solid label="TOK_TRUE"]
  65 -> 64 [style=solid label="TOK_FALSE"]
  65 -> 65 [style=solid label="'-'"]
  65 -> 66 [style=solid label="'!'"]
  65 -> 67 [style=solid label="'('"]
  65 -> 68 [style=dashed label="elemento_vector"]
  65 -> 91 [style=dashed label="exp"]
  65 -> 70 [style=dashed label="idf_llamada_funcion"]
  65 -> 71 [style=dashed label="constante"]
  65 -> 72 [style=dashed label="constante_logica"]
  65 -> 73 [style=dashed label="constante_entera"]
  65 -> 74 [style=dashed label="identificador_use"]
  66 [label="State 66\n\l 60 exp: '!' . exp\l"]
  66 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  66 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  66 -> 63 [style=solid label="TOK_TRUE"]
  66 -> 64 [style=solid label="TOK_FALSE"]
  66 -> 65 [style=solid label="'-'"]
  66 -> 66 [style=solid label="'!'"]
  66 -> 67 [style=solid label="'('"]
  66 -> 68 [style=dashed label="elemento_vector"]
  66 -> 92 [style=dashed label="exp"]
  66 -> 70 [style=dashed label="idf_llamada_funcion"]
  66 -> 71 [style=dashed label="constante"]
  66 -> 72 [style=dashed label="constante_logica"]
  66 -> 73 [style=dashed label="constante_entera"]
  66 -> 74 [style=dashed label="identificador_use"]
  67 [label="State 67\n\l 63 exp: '(' . exp ')'\l 64    | '(' . comparacion ')'\l"]
  67 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  67 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  67 -> 63 [style=solid label="TOK_TRUE"]
  67 -> 64 [style=solid label="TOK_FALSE"]
  67 -> 65 [style=solid label="'-'"]
  67 -> 66 [style=solid label="'!'"]
  67 -> 67 [style=solid label="'('"]
  67 -> 68 [style=dashed label="elemento_vector"]
  67 -> 93 [style=dashed label="exp"]
  67 -> 70 [style=dashed label="idf_llamada_funcion"]
  67 -> 94 [style=dashed label="comparacion"]
  67 -> 71 [style=dashed label="constante"]
  67 -> 72 [style=dashed label="constante_logica"]
  67 -> 73 [style=dashed label="constante_entera"]
  67 -> 74 [style=dashed label="identificador_use"]
  68 [label="State 68\n\l 65 exp: elemento_vector .\l"]
  68 -> "68R65" [style=solid]
 "68R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l 51 escritura: TOK_PRINTF exp .\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  69 -> 95 [style=solid label="TOK_AND"]
  69 -> 96 [style=solid label="TOK_OR"]
  69 -> 97 [style=solid label="'+'"]
  69 -> 98 [style=solid label="'-'"]
  69 -> 99 [style=solid label="'*'"]
  69 -> 100 [style=solid label="'/'"]
  69 -> "69R51" [style=solid]
 "69R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 66 exp: idf_llamada_funcion . '(' lista_expresiones ')'\l"]
  70 -> 101 [style=solid label="'('"]
  71 [label="State 71\n\l 62 exp: constante .\l"]
  71 -> "71R62" [style=solid]
 "71R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 78 constante: constante_logica .\l"]
  72 -> "72R78" [style=solid]
 "72R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 79 constante: constante_entera .\l"]
  73 -> "73R79" [style=solid]
 "73R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 42 elemento_vector: identificador_use . '[' exp ']'\l 61 exp: identificador_use .\l 67 idf_llamada_funcion: identificador_use .\l"]
  74 -> 84 [style=solid label="'['"]
  74 -> "74R61" [style=solid]
 "74R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  74 -> "74R67" [label="['(']", style=solid]
 "74R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 52 retorno_funcion: TOK_RETURN exp .\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  75 -> 95 [style=solid label="TOK_AND"]
  75 -> 96 [style=solid label="TOK_OR"]
  75 -> 97 [style=solid label="'+'"]
  75 -> 98 [style=solid label="'-'"]
  75 -> 99 [style=solid label="'*'"]
  75 -> 100 [style=solid label="'/'"]
  75 -> "75R52" [style=solid]
 "75R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 19 funcion: fn_declaration sentencias '}' .\l"]
  76 -> "76R19" [style=solid]
 "76R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 31 sentencias: sentencia sentencias .\l"]
  77 -> "77R31" [style=solid]
 "77R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 32 sentencia: sentencia_simple ';' .\l"]
  78 -> "78R32" [style=solid]
 "78R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l 41 asignacion: elemento_vector '=' . exp\l"]
  79 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  79 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  79 -> 63 [style=solid label="TOK_TRUE"]
  79 -> 64 [style=solid label="TOK_FALSE"]
  79 -> 65 [style=solid label="'-'"]
  79 -> 66 [style=solid label="'!'"]
  79 -> 67 [style=solid label="'('"]
  79 -> 68 [style=dashed label="elemento_vector"]
  79 -> 102 [style=dashed label="exp"]
  79 -> 70 [style=dashed label="idf_llamada_funcion"]
  79 -> 71 [style=dashed label="constante"]
  79 -> 72 [style=dashed label="constante_logica"]
  79 -> 73 [style=dashed label="constante_entera"]
  79 -> 74 [style=dashed label="identificador_use"]
  80 [label="State 80\n\l 44 condicional: if_sentencias TOK_ELSE . '{' sentencias '}'\l"]
  80 -> 103 [style=solid label="'{'"]
  81 [label="State 81\n\l 45 if_sentencias: if_exp sentencias . '}'\l"]
  81 -> 104 [style=solid label="'}'"]
  82 [label="State 82\n\l 47 bucle: bucle_exp sentencias . '}'\l"]
  82 -> 105 [style=solid label="'}'"]
  83 [label="State 83\n\l 48 bucle_exp: bucle_tok '(' . exp ')' '{'\l"]
  83 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  83 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  83 -> 63 [style=solid label="TOK_TRUE"]
  83 -> 64 [style=solid label="TOK_FALSE"]
  83 -> 65 [style=solid label="'-'"]
  83 -> 66 [style=solid label="'!'"]
  83 -> 67 [style=solid label="'('"]
  83 -> 68 [style=dashed label="elemento_vector"]
  83 -> 106 [style=dashed label="exp"]
  83 -> 70 [style=dashed label="idf_llamada_funcion"]
  83 -> 71 [style=dashed label="constante"]
  83 -> 72 [style=dashed label="constante_logica"]
  83 -> 73 [style=dashed label="constante_entera"]
  83 -> 74 [style=dashed label="identificador_use"]
  84 [label="State 84\n\l 42 elemento_vector: identificador_use '[' . exp ']'\l"]
  84 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  84 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  84 -> 63 [style=solid label="TOK_TRUE"]
  84 -> 64 [style=solid label="TOK_FALSE"]
  84 -> 65 [style=solid label="'-'"]
  84 -> 66 [style=solid label="'!'"]
  84 -> 67 [style=solid label="'('"]
  84 -> 68 [style=dashed label="elemento_vector"]
  84 -> 107 [style=dashed label="exp"]
  84 -> 70 [style=dashed label="idf_llamada_funcion"]
  84 -> 71 [style=dashed label="constante"]
  84 -> 72 [style=dashed label="constante_logica"]
  84 -> 73 [style=dashed label="constante_entera"]
  84 -> 74 [style=dashed label="identificador_use"]
  85 [label="State 85\n\l 40 asignacion: identificador_use '=' . exp\l"]
  85 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  85 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  85 -> 63 [style=solid label="TOK_TRUE"]
  85 -> 64 [style=solid label="TOK_FALSE"]
  85 -> 65 [style=solid label="'-'"]
  85 -> 66 [style=solid label="'!'"]
  85 -> 67 [style=solid label="'('"]
  85 -> 68 [style=dashed label="elemento_vector"]
  85 -> 108 [style=dashed label="exp"]
  85 -> 70 [style=dashed label="idf_llamada_funcion"]
  85 -> 71 [style=dashed label="constante"]
  85 -> 72 [style=dashed label="constante_logica"]
  85 -> 73 [style=dashed label="constante_entera"]
  85 -> 74 [style=dashed label="identificador_use"]
  86 [label="State 86\n\l 27 parametro_funcion: tipo . idpf\l"]
  86 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  86 -> 109 [style=dashed label="idpf"]
  86 -> 110 [style=dashed label="identificador_use"]
  87 [label="State 87\n\l 20 fn_declaration: fn_name '(' parametros_funcion . ')' '{' declaraciones_funcion\l"]
  87 -> 111 [style=solid label="')'"]
  88 [label="State 88\n\l 22 parametros_funcion: parametro_funcion . resto_parametros_funcion\l"]
  88 -> 112 [style=solid label="';'"]
  88 -> 113 [style=dashed label="resto_parametros_funcion"]
  88 -> "88R25" [style=solid]
 "88R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l  1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main sentencias final . '}'\l"]
  89 -> 114 [style=solid label="'}'"]
  90 [label="State 90\n\l 46 if_exp: TOK_IF '(' exp . ')' '{'\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  90 -> 95 [style=solid label="TOK_AND"]
  90 -> 96 [style=solid label="TOK_OR"]
  90 -> 97 [style=solid label="'+'"]
  90 -> 98 [style=solid label="'-'"]
  90 -> 99 [style=solid label="'*'"]
  90 -> 100 [style=solid label="'/'"]
  90 -> 115 [style=solid label="')'"]
  91 [label="State 91\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 57    | '-' exp .\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  91 -> "91R57" [style=solid]
 "91R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l 60    | '!' exp .\l"]
  92 -> "92R60" [style=solid]
 "92R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l 63    | '(' exp . ')'\l 72 comparacion: exp . TOK_IGUAL exp\l 73            | exp . TOK_DISTINTO exp\l 74            | exp . TOK_MENORIGUAL exp\l 75            | exp . TOK_MAYORIGUAL exp\l 76            | exp . '<' exp\l 77            | exp . '>' exp\l"]
  93 -> 95 [style=solid label="TOK_AND"]
  93 -> 96 [style=solid label="TOK_OR"]
  93 -> 116 [style=solid label="TOK_IGUAL"]
  93 -> 117 [style=solid label="TOK_DISTINTO"]
  93 -> 118 [style=solid label="TOK_MENORIGUAL"]
  93 -> 119 [style=solid label="TOK_MAYORIGUAL"]
  93 -> 97 [style=solid label="'+'"]
  93 -> 98 [style=solid label="'-'"]
  93 -> 99 [style=solid label="'*'"]
  93 -> 100 [style=solid label="'/'"]
  93 -> 120 [style=solid label="')'"]
  93 -> 121 [style=solid label="'<'"]
  93 -> 122 [style=solid label="'>'"]
  94 [label="State 94\n\l 64 exp: '(' comparacion . ')'\l"]
  94 -> 123 [style=solid label="')'"]
  95 [label="State 95\n\l 58 exp: exp TOK_AND . exp\l"]
  95 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  95 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  95 -> 63 [style=solid label="TOK_TRUE"]
  95 -> 64 [style=solid label="TOK_FALSE"]
  95 -> 65 [style=solid label="'-'"]
  95 -> 66 [style=solid label="'!'"]
  95 -> 67 [style=solid label="'('"]
  95 -> 68 [style=dashed label="elemento_vector"]
  95 -> 124 [style=dashed label="exp"]
  95 -> 70 [style=dashed label="idf_llamada_funcion"]
  95 -> 71 [style=dashed label="constante"]
  95 -> 72 [style=dashed label="constante_logica"]
  95 -> 73 [style=dashed label="constante_entera"]
  95 -> 74 [style=dashed label="identificador_use"]
  96 [label="State 96\n\l 59 exp: exp TOK_OR . exp\l"]
  96 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  96 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  96 -> 63 [style=solid label="TOK_TRUE"]
  96 -> 64 [style=solid label="TOK_FALSE"]
  96 -> 65 [style=solid label="'-'"]
  96 -> 66 [style=solid label="'!'"]
  96 -> 67 [style=solid label="'('"]
  96 -> 68 [style=dashed label="elemento_vector"]
  96 -> 125 [style=dashed label="exp"]
  96 -> 70 [style=dashed label="idf_llamada_funcion"]
  96 -> 71 [style=dashed label="constante"]
  96 -> 72 [style=dashed label="constante_logica"]
  96 -> 73 [style=dashed label="constante_entera"]
  96 -> 74 [style=dashed label="identificador_use"]
  97 [label="State 97\n\l 53 exp: exp '+' . exp\l"]
  97 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  97 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  97 -> 63 [style=solid label="TOK_TRUE"]
  97 -> 64 [style=solid label="TOK_FALSE"]
  97 -> 65 [style=solid label="'-'"]
  97 -> 66 [style=solid label="'!'"]
  97 -> 67 [style=solid label="'('"]
  97 -> 68 [style=dashed label="elemento_vector"]
  97 -> 126 [style=dashed label="exp"]
  97 -> 70 [style=dashed label="idf_llamada_funcion"]
  97 -> 71 [style=dashed label="constante"]
  97 -> 72 [style=dashed label="constante_logica"]
  97 -> 73 [style=dashed label="constante_entera"]
  97 -> 74 [style=dashed label="identificador_use"]
  98 [label="State 98\n\l 54 exp: exp '-' . exp\l"]
  98 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  98 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  98 -> 63 [style=solid label="TOK_TRUE"]
  98 -> 64 [style=solid label="TOK_FALSE"]
  98 -> 65 [style=solid label="'-'"]
  98 -> 66 [style=solid label="'!'"]
  98 -> 67 [style=solid label="'('"]
  98 -> 68 [style=dashed label="elemento_vector"]
  98 -> 127 [style=dashed label="exp"]
  98 -> 70 [style=dashed label="idf_llamada_funcion"]
  98 -> 71 [style=dashed label="constante"]
  98 -> 72 [style=dashed label="constante_logica"]
  98 -> 73 [style=dashed label="constante_entera"]
  98 -> 74 [style=dashed label="identificador_use"]
  99 [label="State 99\n\l 56 exp: exp '*' . exp\l"]
  99 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  99 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  99 -> 63 [style=solid label="TOK_TRUE"]
  99 -> 64 [style=solid label="TOK_FALSE"]
  99 -> 65 [style=solid label="'-'"]
  99 -> 66 [style=solid label="'!'"]
  99 -> 67 [style=solid label="'('"]
  99 -> 68 [style=dashed label="elemento_vector"]
  99 -> 128 [style=dashed label="exp"]
  99 -> 70 [style=dashed label="idf_llamada_funcion"]
  99 -> 71 [style=dashed label="constante"]
  99 -> 72 [style=dashed label="constante_logica"]
  99 -> 73 [style=dashed label="constante_entera"]
  99 -> 74 [style=dashed label="identificador_use"]
  100 [label="State 100\n\l 55 exp: exp '/' . exp\l"]
  100 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  100 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  100 -> 63 [style=solid label="TOK_TRUE"]
  100 -> 64 [style=solid label="TOK_FALSE"]
  100 -> 65 [style=solid label="'-'"]
  100 -> 66 [style=solid label="'!'"]
  100 -> 67 [style=solid label="'('"]
  100 -> 68 [style=dashed label="elemento_vector"]
  100 -> 129 [style=dashed label="exp"]
  100 -> 70 [style=dashed label="idf_llamada_funcion"]
  100 -> 71 [style=dashed label="constante"]
  100 -> 72 [style=dashed label="constante_logica"]
  100 -> 73 [style=dashed label="constante_entera"]
  100 -> 74 [style=dashed label="identificador_use"]
  101 [label="State 101\n\l 66 exp: idf_llamada_funcion '(' . lista_expresiones ')'\l"]
  101 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  101 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  101 -> 63 [style=solid label="TOK_TRUE"]
  101 -> 64 [style=solid label="TOK_FALSE"]
  101 -> 65 [style=solid label="'-'"]
  101 -> 66 [style=solid label="'!'"]
  101 -> 67 [style=solid label="'('"]
  101 -> 68 [style=dashed label="elemento_vector"]
  101 -> 130 [style=dashed label="exp"]
  101 -> 70 [style=dashed label="idf_llamada_funcion"]
  101 -> 131 [style=dashed label="lista_expresiones"]
  101 -> 71 [style=dashed label="constante"]
  101 -> 72 [style=dashed label="constante_logica"]
  101 -> 73 [style=dashed label="constante_entera"]
  101 -> 74 [style=dashed label="identificador_use"]
  101 -> "101R69" [style=solid]
 "101R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 41 asignacion: elemento_vector '=' exp .\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  102 -> 95 [style=solid label="TOK_AND"]
  102 -> 96 [style=solid label="TOK_OR"]
  102 -> 97 [style=solid label="'+'"]
  102 -> 98 [style=solid label="'-'"]
  102 -> 99 [style=solid label="'*'"]
  102 -> 100 [style=solid label="'/'"]
  102 -> "102R41" [style=solid]
 "102R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  103 [label="State 103\n\l 44 condicional: if_sentencias TOK_ELSE '{' . sentencias '}'\l"]
  103 -> 33 [style=solid label="TOK_IF"]
  103 -> 34 [style=solid label="TOK_WHILE"]
  103 -> 35 [style=solid label="TOK_SCANF"]
  103 -> 36 [style=solid label="TOK_PRINTF"]
  103 -> 37 [style=solid label="TOK_RETURN"]
  103 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  103 -> 132 [style=dashed label="sentencias"]
  103 -> 40 [style=dashed label="sentencia"]
  103 -> 41 [style=dashed label="sentencia_simple"]
  103 -> 42 [style=dashed label="bloque"]
  103 -> 43 [style=dashed label="asignacion"]
  103 -> 44 [style=dashed label="elemento_vector"]
  103 -> 45 [style=dashed label="condicional"]
  103 -> 46 [style=dashed label="if_sentencias"]
  103 -> 47 [style=dashed label="if_exp"]
  103 -> 48 [style=dashed label="bucle"]
  103 -> 49 [style=dashed label="bucle_exp"]
  103 -> 50 [style=dashed label="bucle_tok"]
  103 -> 51 [style=dashed label="lectura"]
  103 -> 52 [style=dashed label="escritura"]
  103 -> 53 [style=dashed label="retorno_funcion"]
  103 -> 54 [style=dashed label="identificador_use"]
  104 [label="State 104\n\l 45 if_sentencias: if_exp sentencias '}' .\l"]
  104 -> "104R45" [style=solid]
 "104R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  105 [label="State 105\n\l 47 bucle: bucle_exp sentencias '}' .\l"]
  105 -> "105R47" [style=solid]
 "105R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  106 [label="State 106\n\l 48 bucle_exp: bucle_tok '(' exp . ')' '{'\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  106 -> 95 [style=solid label="TOK_AND"]
  106 -> 96 [style=solid label="TOK_OR"]
  106 -> 97 [style=solid label="'+'"]
  106 -> 98 [style=solid label="'-'"]
  106 -> 99 [style=solid label="'*'"]
  106 -> 100 [style=solid label="'/'"]
  106 -> 133 [style=solid label="')'"]
  107 [label="State 107\n\l 42 elemento_vector: identificador_use '[' exp . ']'\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  107 -> 95 [style=solid label="TOK_AND"]
  107 -> 96 [style=solid label="TOK_OR"]
  107 -> 97 [style=solid label="'+'"]
  107 -> 98 [style=solid label="'-'"]
  107 -> 99 [style=solid label="'*'"]
  107 -> 100 [style=solid label="'/'"]
  107 -> 134 [style=solid label="']'"]
  108 [label="State 108\n\l 40 asignacion: identificador_use '=' exp .\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  108 -> 95 [style=solid label="TOK_AND"]
  108 -> 96 [style=solid label="TOK_OR"]
  108 -> 97 [style=solid label="'+'"]
  108 -> 98 [style=solid label="'-'"]
  108 -> 99 [style=solid label="'*'"]
  108 -> 100 [style=solid label="'/'"]
  108 -> "108R40" [style=solid]
 "108R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  109 [label="State 109\n\l 27 parametro_funcion: tipo idpf .\l"]
  109 -> "109R27" [style=solid]
 "109R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  110 [label="State 110\n\l 26 idpf: identificador_use .\l"]
  110 -> "110R26" [style=solid]
 "110R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 20 fn_declaration: fn_name '(' parametros_funcion ')' . '{' declaraciones_funcion\l"]
  111 -> 135 [style=solid label="'{'"]
  112 [label="State 112\n\l 24 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion\l"]
  112 -> 6 [style=solid label="TOK_INT"]
  112 -> 7 [style=solid label="TOK_BOOLEAN"]
  112 -> 86 [style=dashed label="tipo"]
  112 -> 136 [style=dashed label="parametro_funcion"]
  113 [label="State 113\n\l 22 parametros_funcion: parametro_funcion resto_parametros_funcion .\l"]
  113 -> "113R22" [style=solid]
 "113R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  114 [label="State 114\n\l  1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main sentencias final '}' .\l"]
  114 -> "114R1" [style=solid]
 "114R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  115 [label="State 115\n\l 46 if_exp: TOK_IF '(' exp ')' . '{'\l"]
  115 -> 137 [style=solid label="'{'"]
  116 [label="State 116\n\l 72 comparacion: exp TOK_IGUAL . exp\l"]
  116 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  116 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  116 -> 63 [style=solid label="TOK_TRUE"]
  116 -> 64 [style=solid label="TOK_FALSE"]
  116 -> 65 [style=solid label="'-'"]
  116 -> 66 [style=solid label="'!'"]
  116 -> 67 [style=solid label="'('"]
  116 -> 68 [style=dashed label="elemento_vector"]
  116 -> 138 [style=dashed label="exp"]
  116 -> 70 [style=dashed label="idf_llamada_funcion"]
  116 -> 71 [style=dashed label="constante"]
  116 -> 72 [style=dashed label="constante_logica"]
  116 -> 73 [style=dashed label="constante_entera"]
  116 -> 74 [style=dashed label="identificador_use"]
  117 [label="State 117\n\l 73 comparacion: exp TOK_DISTINTO . exp\l"]
  117 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  117 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  117 -> 63 [style=solid label="TOK_TRUE"]
  117 -> 64 [style=solid label="TOK_FALSE"]
  117 -> 65 [style=solid label="'-'"]
  117 -> 66 [style=solid label="'!'"]
  117 -> 67 [style=solid label="'('"]
  117 -> 68 [style=dashed label="elemento_vector"]
  117 -> 139 [style=dashed label="exp"]
  117 -> 70 [style=dashed label="idf_llamada_funcion"]
  117 -> 71 [style=dashed label="constante"]
  117 -> 72 [style=dashed label="constante_logica"]
  117 -> 73 [style=dashed label="constante_entera"]
  117 -> 74 [style=dashed label="identificador_use"]
  118 [label="State 118\n\l 74 comparacion: exp TOK_MENORIGUAL . exp\l"]
  118 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  118 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  118 -> 63 [style=solid label="TOK_TRUE"]
  118 -> 64 [style=solid label="TOK_FALSE"]
  118 -> 65 [style=solid label="'-'"]
  118 -> 66 [style=solid label="'!'"]
  118 -> 67 [style=solid label="'('"]
  118 -> 68 [style=dashed label="elemento_vector"]
  118 -> 140 [style=dashed label="exp"]
  118 -> 70 [style=dashed label="idf_llamada_funcion"]
  118 -> 71 [style=dashed label="constante"]
  118 -> 72 [style=dashed label="constante_logica"]
  118 -> 73 [style=dashed label="constante_entera"]
  118 -> 74 [style=dashed label="identificador_use"]
  119 [label="State 119\n\l 75 comparacion: exp TOK_MAYORIGUAL . exp\l"]
  119 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  119 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  119 -> 63 [style=solid label="TOK_TRUE"]
  119 -> 64 [style=solid label="TOK_FALSE"]
  119 -> 65 [style=solid label="'-'"]
  119 -> 66 [style=solid label="'!'"]
  119 -> 67 [style=solid label="'('"]
  119 -> 68 [style=dashed label="elemento_vector"]
  119 -> 141 [style=dashed label="exp"]
  119 -> 70 [style=dashed label="idf_llamada_funcion"]
  119 -> 71 [style=dashed label="constante"]
  119 -> 72 [style=dashed label="constante_logica"]
  119 -> 73 [style=dashed label="constante_entera"]
  119 -> 74 [style=dashed label="identificador_use"]
  120 [label="State 120\n\l 63 exp: '(' exp ')' .\l"]
  120 -> "120R63" [style=solid]
 "120R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  121 [label="State 121\n\l 76 comparacion: exp '<' . exp\l"]
  121 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  121 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  121 -> 63 [style=solid label="TOK_TRUE"]
  121 -> 64 [style=solid label="TOK_FALSE"]
  121 -> 65 [style=solid label="'-'"]
  121 -> 66 [style=solid label="'!'"]
  121 -> 67 [style=solid label="'('"]
  121 -> 68 [style=dashed label="elemento_vector"]
  121 -> 142 [style=dashed label="exp"]
  121 -> 70 [style=dashed label="idf_llamada_funcion"]
  121 -> 71 [style=dashed label="constante"]
  121 -> 72 [style=dashed label="constante_logica"]
  121 -> 73 [style=dashed label="constante_entera"]
  121 -> 74 [style=dashed label="identificador_use"]
  122 [label="State 122\n\l 77 comparacion: exp '>' . exp\l"]
  122 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  122 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  122 -> 63 [style=solid label="TOK_TRUE"]
  122 -> 64 [style=solid label="TOK_FALSE"]
  122 -> 65 [style=solid label="'-'"]
  122 -> 66 [style=solid label="'!'"]
  122 -> 67 [style=solid label="'('"]
  122 -> 68 [style=dashed label="elemento_vector"]
  122 -> 143 [style=dashed label="exp"]
  122 -> 70 [style=dashed label="idf_llamada_funcion"]
  122 -> 71 [style=dashed label="constante"]
  122 -> 72 [style=dashed label="constante_logica"]
  122 -> 73 [style=dashed label="constante_entera"]
  122 -> 74 [style=dashed label="identificador_use"]
  123 [label="State 123\n\l 64 exp: '(' comparacion ')' .\l"]
  123 -> "123R64" [style=solid]
 "123R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 58    | exp TOK_AND exp .\l 59    | exp . TOK_OR exp\l"]
  124 -> "124R58" [style=solid]
 "124R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l 59    | exp TOK_OR exp .\l"]
  125 -> 95 [style=solid label="TOK_AND"]
  125 -> 99 [style=solid label="'*'"]
  125 -> 100 [style=solid label="'/'"]
  125 -> "125R59" [style=solid]
 "125R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l 53 exp: exp . '+' exp\l 53    | exp '+' exp .\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  126 -> 95 [style=solid label="TOK_AND"]
  126 -> 99 [style=solid label="'*'"]
  126 -> 100 [style=solid label="'/'"]
  126 -> "126R53" [style=solid]
 "126R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 54    | exp '-' exp .\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  127 -> 95 [style=solid label="TOK_AND"]
  127 -> 99 [style=solid label="'*'"]
  127 -> 100 [style=solid label="'/'"]
  127 -> "127R54" [style=solid]
 "127R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 56    | exp '*' exp .\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  128 -> "128R56" [style=solid]
 "128R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  129 [label="State 129\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 55    | exp '/' exp .\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l"]
  129 -> "129R55" [style=solid]
 "129R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  130 [label="State 130\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l 68 lista_expresiones: exp . resto_lista_expresiones\l"]
  130 -> 95 [style=solid label="TOK_AND"]
  130 -> 96 [style=solid label="TOK_OR"]
  130 -> 97 [style=solid label="'+'"]
  130 -> 98 [style=solid label="'-'"]
  130 -> 99 [style=solid label="'*'"]
  130 -> 100 [style=solid label="'/'"]
  130 -> 144 [style=solid label="','"]
  130 -> 145 [style=dashed label="resto_lista_expresiones"]
  130 -> "130R71" [style=solid]
 "130R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  131 [label="State 131\n\l 66 exp: idf_llamada_funcion '(' lista_expresiones . ')'\l"]
  131 -> 146 [style=solid label="')'"]
  132 [label="State 132\n\l 44 condicional: if_sentencias TOK_ELSE '{' sentencias . '}'\l"]
  132 -> 147 [style=solid label="'}'"]
  133 [label="State 133\n\l 48 bucle_exp: bucle_tok '(' exp ')' . '{'\l"]
  133 -> 148 [style=solid label="'{'"]
  134 [label="State 134\n\l 42 elemento_vector: identificador_use '[' exp ']' .\l"]
  134 -> "134R42" [style=solid]
 "134R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 20 fn_declaration: fn_name '(' parametros_funcion ')' '{' . declaraciones_funcion\l"]
  135 -> 6 [style=solid label="TOK_INT"]
  135 -> 7 [style=solid label="TOK_BOOLEAN"]
  135 -> 8 [style=solid label="TOK_ARRAY"]
  135 -> 149 [style=dashed label="declaraciones"]
  135 -> 10 [style=dashed label="declaracion"]
  135 -> 11 [style=dashed label="clase"]
  135 -> 12 [style=dashed label="clase_escalar"]
  135 -> 13 [style=dashed label="tipo"]
  135 -> 14 [style=dashed label="clase_vector"]
  135 -> 150 [style=dashed label="declaraciones_funcion"]
  135 -> "135R29" [style=solid]
 "135R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  136 [label="State 136\n\l 24 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion\l"]
  136 -> 112 [style=solid label="';'"]
  136 -> 151 [style=dashed label="resto_parametros_funcion"]
  136 -> "136R25" [style=solid]
 "136R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  137 [label="State 137\n\l 46 if_exp: TOK_IF '(' exp ')' '{' .\l"]
  137 -> "137R46" [style=solid]
 "137R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  138 [label="State 138\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l 72 comparacion: exp TOK_IGUAL exp .\l"]
  138 -> 95 [style=solid label="TOK_AND"]
  138 -> 96 [style=solid label="TOK_OR"]
  138 -> 97 [style=solid label="'+'"]
  138 -> 98 [style=solid label="'-'"]
  138 -> 99 [style=solid label="'*'"]
  138 -> 100 [style=solid label="'/'"]
  138 -> "138R72" [style=solid]
 "138R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  139 [label="State 139\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l 73 comparacion: exp TOK_DISTINTO exp .\l"]
  139 -> 95 [style=solid label="TOK_AND"]
  139 -> 96 [style=solid label="TOK_OR"]
  139 -> 97 [style=solid label="'+'"]
  139 -> 98 [style=solid label="'-'"]
  139 -> 99 [style=solid label="'*'"]
  139 -> 100 [style=solid label="'/'"]
  139 -> "139R73" [style=solid]
 "139R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l 74 comparacion: exp TOK_MENORIGUAL exp .\l"]
  140 -> 95 [style=solid label="TOK_AND"]
  140 -> 96 [style=solid label="TOK_OR"]
  140 -> 97 [style=solid label="'+'"]
  140 -> 98 [style=solid label="'-'"]
  140 -> 99 [style=solid label="'*'"]
  140 -> 100 [style=solid label="'/'"]
  140 -> "140R74" [style=solid]
 "140R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  141 [label="State 141\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l 75 comparacion: exp TOK_MAYORIGUAL exp .\l"]
  141 -> 95 [style=solid label="TOK_AND"]
  141 -> 96 [style=solid label="TOK_OR"]
  141 -> 97 [style=solid label="'+'"]
  141 -> 98 [style=solid label="'-'"]
  141 -> 99 [style=solid label="'*'"]
  141 -> 100 [style=solid label="'/'"]
  141 -> "141R75" [style=solid]
 "141R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l 76 comparacion: exp '<' exp .\l"]
  142 -> 95 [style=solid label="TOK_AND"]
  142 -> 96 [style=solid label="TOK_OR"]
  142 -> 97 [style=solid label="'+'"]
  142 -> 98 [style=solid label="'-'"]
  142 -> 99 [style=solid label="'*'"]
  142 -> 100 [style=solid label="'/'"]
  142 -> "142R76" [style=solid]
 "142R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  143 [label="State 143\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l 77 comparacion: exp '>' exp .\l"]
  143 -> 95 [style=solid label="TOK_AND"]
  143 -> 96 [style=solid label="TOK_OR"]
  143 -> 97 [style=solid label="'+'"]
  143 -> 98 [style=solid label="'-'"]
  143 -> 99 [style=solid label="'*'"]
  143 -> 100 [style=solid label="'/'"]
  143 -> "143R77" [style=solid]
 "143R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l 70 resto_lista_expresiones: ',' . exp resto_lista_expresiones\l"]
  144 -> 38 [style=solid label="TOK_IDENTIFICADOR"]
  144 -> 62 [style=solid label="TOK_CONSTANTE_ENTERA"]
  144 -> 63 [style=solid label="TOK_TRUE"]
  144 -> 64 [style=solid label="TOK_FALSE"]
  144 -> 65 [style=solid label="'-'"]
  144 -> 66 [style=solid label="'!'"]
  144 -> 67 [style=solid label="'('"]
  144 -> 68 [style=dashed label="elemento_vector"]
  144 -> 152 [style=dashed label="exp"]
  144 -> 70 [style=dashed label="idf_llamada_funcion"]
  144 -> 71 [style=dashed label="constante"]
  144 -> 72 [style=dashed label="constante_logica"]
  144 -> 73 [style=dashed label="constante_entera"]
  144 -> 74 [style=dashed label="identificador_use"]
  145 [label="State 145\n\l 68 lista_expresiones: exp resto_lista_expresiones .\l"]
  145 -> "145R68" [style=solid]
 "145R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  146 [label="State 146\n\l 66 exp: idf_llamada_funcion '(' lista_expresiones ')' .\l"]
  146 -> "146R66" [style=solid]
 "146R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  147 [label="State 147\n\l 44 condicional: if_sentencias TOK_ELSE '{' sentencias '}' .\l"]
  147 -> "147R44" [style=solid]
 "147R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  148 [label="State 148\n\l 48 bucle_exp: bucle_tok '(' exp ')' '{' .\l"]
  148 -> "148R48" [style=solid]
 "148R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l 28 declaraciones_funcion: declaraciones .\l"]
  149 -> "149R28" [style=solid]
 "149R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 20 fn_declaration: fn_name '(' parametros_funcion ')' '{' declaraciones_funcion .\l"]
  150 -> "150R20" [style=solid]
 "150R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 24 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .\l"]
  151 -> "151R24" [style=solid]
 "151R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l 53 exp: exp . '+' exp\l 54    | exp . '-' exp\l 55    | exp . '/' exp\l 56    | exp . '*' exp\l 58    | exp . TOK_AND exp\l 59    | exp . TOK_OR exp\l 70 resto_lista_expresiones: ',' exp . resto_lista_expresiones\l"]
  152 -> 95 [style=solid label="TOK_AND"]
  152 -> 96 [style=solid label="TOK_OR"]
  152 -> 97 [style=solid label="'+'"]
  152 -> 98 [style=solid label="'-'"]
  152 -> 99 [style=solid label="'*'"]
  152 -> 100 [style=solid label="'/'"]
  152 -> 144 [style=solid label="','"]
  152 -> 153 [style=dashed label="resto_lista_expresiones"]
  152 -> "152R71" [style=solid]
 "152R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l 70 resto_lista_expresiones: ',' exp resto_lista_expresiones .\l"]
  153 -> "153R70" [style=solid]
 "153R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
}

Terminales no usados en la gramática

   TOK_ERROR


Gramática

    0 $accept: programa $end

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main sentencias final '}'

    2 iniciar: %empty

    3 final: %empty

    4 dec_vars: %empty

    5 wrt_main: %empty

    6 declaraciones: declaracion
    7              | declaracion declaraciones

    8 declaracion: clase identificadores ';'

    9 clase: clase_escalar
   10      | clase_vector

   11 clase_escalar: tipo

   12 tipo: TOK_INT
   13     | TOK_BOOLEAN

   14 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']'

   15 identificadores: identificador
   16                | identificador ',' identificadores

   17 funciones: funcion funciones
   18          | %empty

   19 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

   20 parametros_funcion: parametro_funcion resto_parametros_funcion
   21                   | %empty

   22 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   23                         | %empty

   24 parametro_funcion: tipo identificador

   25 declaraciones_funcion: declaraciones
   26                      | %empty

   27 sentencias: sentencia
   28           | sentencia sentencias

   29 sentencia: sentencia_simple ';'
   30          | bloque

   31 sentencia_simple: asignacion
   32                 | lectura
   33                 | escritura
   34                 | retorno_funcion

   35 bloque: condicional
   36       | bucle

   37 asignacion: TOK_IDENTIFICADOR '=' exp
   38           | elemento_vector '=' exp

   39 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   40 condicional: TOK_IF '(' exp ')' '{' sentencias '}'
   41            | TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

   42 bucle: TOK_WHILE '(' exp ')' '{' sentencias '}'

   43 lectura: TOK_SCANF TOK_IDENTIFICADOR

   44 escritura: TOK_PRINTF exp

   45 retorno_funcion: TOK_RETURN exp

   46 exp: exp '+' exp
   47    | exp '-' exp
   48    | exp '/' exp
   49    | exp '*' exp
   50    | '-' exp
   51    | exp TOK_AND exp
   52    | exp TOK_OR exp
   53    | '!' exp
   54    | TOK_IDENTIFICADOR
   55    | constante
   56    | '(' exp ')'
   57    | '(' comparacion ')'
   58    | elemento_vector
   59    | identificador '(' lista_expresiones ')'

   60 lista_expresiones: exp resto_lista_expresiones
   61                  | %empty

   62 resto_lista_expresiones: ',' exp resto_lista_expresiones
   63                        | %empty

   64 comparacion: exp TOK_IGUAL exp
   65            | exp TOK_DISTINTO exp
   66            | exp TOK_MENORIGUAL exp
   67            | exp TOK_MAYORIGUAL exp
   68            | exp '<' exp
   69            | exp '>' exp

   70 constante: constante_logica
   71          | constante_entera

   72 constante_logica: TOK_TRUE
   73                 | TOK_FALSE

   74 constante_entera: TOK_CONSTANTE_ENTERA

   75 identificador: TOK_IDENTIFICADOR


Terminales con las reglas donde aparecen

$end (0) 0
'!' (33) 53
'(' (40) 19 40 41 42 56 57 59
')' (41) 19 40 41 42 56 57 59
'*' (42) 49
'+' (43) 46
',' (44) 16 62
'-' (45) 47 50
'/' (47) 48
';' (59) 8 22 29
'<' (60) 68
'=' (61) 37 38
'>' (62) 69
'[' (91) 14 39
']' (93) 14 39
'{' (123) 1 19 40 41 42
'}' (125) 1 19 40 41 42
error (256)
TOK_MAIN (258) 1
TOK_INT (259) 12
TOK_BOOLEAN (260) 13
TOK_ARRAY (261) 14
TOK_FUNCTION (262) 19
TOK_IF (263) 40 41
TOK_ELSE (264) 41
TOK_WHILE (265) 42
TOK_SCANF (266) 43
TOK_PRINTF (267) 44
TOK_RETURN (268) 45
TOK_AND (269) 51
TOK_OR (270) 52
TOK_IGUAL (271) 64
TOK_DISTINTO (272) 65
TOK_MENORIGUAL (273) 66
TOK_MAYORIGUAL (274) 67
TOK_IDENTIFICADOR (275) 37 39 43 54 75
TOK_CONSTANTE_ENTERA (276) 14 74
TOK_TRUE (277) 72
TOK_FALSE (278) 73
TOK_ERROR (279)


No terminales con las reglas donde aparecen

$accept (41)
    en la izquierda: 0
programa (42)
    en la izquierda: 1, en la derecha: 0
iniciar (43)
    en la izquierda: 2, en la derecha: 1
final (44)
    en la izquierda: 3, en la derecha: 1
dec_vars (45)
    en la izquierda: 4, en la derecha: 1
wrt_main (46)
    en la izquierda: 5, en la derecha: 1
declaraciones (47)
    en la izquierda: 6 7, en la derecha: 1 7 25
declaracion (48)
    en la izquierda: 8, en la derecha: 6 7
clase (49)
    en la izquierda: 9 10, en la derecha: 8
clase_escalar (50)
    en la izquierda: 11, en la derecha: 9
tipo (51)
    en la izquierda: 12 13, en la derecha: 11 14 19 24
clase_vector (52)
    en la izquierda: 14, en la derecha: 10
identificadores (53)
    en la izquierda: 15 16, en la derecha: 8 16
funciones (54)
    en la izquierda: 17 18, en la derecha: 1 17
funcion (55)
    en la izquierda: 19, en la derecha: 17
parametros_funcion (56)
    en la izquierda: 20 21, en la derecha: 19
resto_parametros_funcion (57)
    en la izquierda: 22 23, en la derecha: 20 22
parametro_funcion (58)
    en la izquierda: 24, en la derecha: 20 22
declaraciones_funcion (59)
    en la izquierda: 25 26, en la derecha: 19
sentencias (60)
    en la izquierda: 27 28, en la derecha: 1 19 28 40 41 42
sentencia (61)
    en la izquierda: 29 30, en la derecha: 27 28
sentencia_simple (62)
    en la izquierda: 31 32 33 34, en la derecha: 29
bloque (63)
    en la izquierda: 35 36, en la derecha: 30
asignacion (64)
    en la izquierda: 37 38, en la derecha: 31
elemento_vector (65)
    en la izquierda: 39, en la derecha: 38 58
condicional (66)
    en la izquierda: 40 41, en la derecha: 35
bucle (67)
    en la izquierda: 42, en la derecha: 36
lectura (68)
    en la izquierda: 43, en la derecha: 32
escritura (69)
    en la izquierda: 44, en la derecha: 33
retorno_funcion (70)
    en la izquierda: 45, en la derecha: 34
exp (71)
    en la izquierda: 46 47 48 49 50 51 52 53 54 55 56 57 58 59, en la derecha:
    37 38 39 40 41 42 44 45 46 47 48 49 50 51 52 53 56 60 62 64 65
    66 67 68 69
lista_expresiones (72)
    en la izquierda: 60 61, en la derecha: 59
resto_lista_expresiones (73)
    en la izquierda: 62 63, en la derecha: 60 62
comparacion (74)
    en la izquierda: 64 65 66 67 68 69, en la derecha: 57
constante (75)
    en la izquierda: 70 71, en la derecha: 55
constante_logica (76)
    en la izquierda: 72 73, en la derecha: 70
constante_entera (77)
    en la izquierda: 74, en la derecha: 71
identificador (78)
    en la izquierda: 75, en la derecha: 15 16 19 24 59


Estado 0

    0 $accept: . programa $end

    TOK_MAIN  desplazar e ir al estado 1

    programa  ir al estado 2


Estado 1

    1 programa: TOK_MAIN . '{' iniciar declaraciones dec_vars funciones wrt_main sentencias final '}'

    '{'  desplazar e ir al estado 3


Estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 4


Estado 3

    1 programa: TOK_MAIN '{' . iniciar declaraciones dec_vars funciones wrt_main sentencias final '}'

    $default  reduce usando la regla 2 (iniciar)

    iniciar  ir al estado 5


Estado 4

    0 $accept: programa $end .

    $default  aceptar


Estado 5

    1 programa: TOK_MAIN '{' iniciar . declaraciones dec_vars funciones wrt_main sentencias final '}'

    TOK_INT      desplazar e ir al estado 6
    TOK_BOOLEAN  desplazar e ir al estado 7
    TOK_ARRAY    desplazar e ir al estado 8

    declaraciones  ir al estado 9
    declaracion    ir al estado 10
    clase          ir al estado 11
    clase_escalar  ir al estado 12
    tipo           ir al estado 13
    clase_vector   ir al estado 14


Estado 6

   12 tipo: TOK_INT .

    $default  reduce usando la regla 12 (tipo)


Estado 7

   13 tipo: TOK_BOOLEAN .

    $default  reduce usando la regla 13 (tipo)


Estado 8

   14 clase_vector: TOK_ARRAY . tipo '[' TOK_CONSTANTE_ENTERA ']'

    TOK_INT      desplazar e ir al estado 6
    TOK_BOOLEAN  desplazar e ir al estado 7

    tipo  ir al estado 15


Estado 9

    1 programa: TOK_MAIN '{' iniciar declaraciones . dec_vars funciones wrt_main sentencias final '}'

    $default  reduce usando la regla 4 (dec_vars)

    dec_vars  ir al estado 16


Estado 10

    6 declaraciones: declaracion .
    7              | declaracion . declaraciones

    TOK_INT      desplazar e ir al estado 6
    TOK_BOOLEAN  desplazar e ir al estado 7
    TOK_ARRAY    desplazar e ir al estado 8

    $default  reduce usando la regla 6 (declaraciones)

    declaraciones  ir al estado 17
    declaracion    ir al estado 10
    clase          ir al estado 11
    clase_escalar  ir al estado 12
    tipo           ir al estado 13
    clase_vector   ir al estado 14


Estado 11

    8 declaracion: clase . identificadores ';'

    TOK_IDENTIFICADOR  desplazar e ir al estado 18

    identificadores  ir al estado 19
    identificador    ir al estado 20


Estado 12

    9 clase: clase_escalar .

    $default  reduce usando la regla 9 (clase)


Estado 13

   11 clase_escalar: tipo .

    $default  reduce usando la regla 11 (clase_escalar)


Estado 14

   10 clase: clase_vector .

    $default  reduce usando la regla 10 (clase)


Estado 15

   14 clase_vector: TOK_ARRAY tipo . '[' TOK_CONSTANTE_ENTERA ']'

    '['  desplazar e ir al estado 21


Estado 16

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars . funciones wrt_main sentencias final '}'

    TOK_FUNCTION  desplazar e ir al estado 22

    $default  reduce usando la regla 18 (funciones)

    funciones  ir al estado 23
    funcion    ir al estado 24


Estado 17

    7 declaraciones: declaracion declaraciones .

    $default  reduce usando la regla 7 (declaraciones)


Estado 18

   75 identificador: TOK_IDENTIFICADOR .

    $default  reduce usando la regla 75 (identificador)


Estado 19

    8 declaracion: clase identificadores . ';'

    ';'  desplazar e ir al estado 25


Estado 20

   15 identificadores: identificador .
   16                | identificador . ',' identificadores

    ','  desplazar e ir al estado 26

    $default  reduce usando la regla 15 (identificadores)


Estado 21

   14 clase_vector: TOK_ARRAY tipo '[' . TOK_CONSTANTE_ENTERA ']'

    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 27


Estado 22

   19 funcion: TOK_FUNCTION . tipo identificador '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT      desplazar e ir al estado 6
    TOK_BOOLEAN  desplazar e ir al estado 7

    tipo  ir al estado 28


Estado 23

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones . wrt_main sentencias final '}'

    $default  reduce usando la regla 5 (wrt_main)

    wrt_main  ir al estado 29


Estado 24

   17 funciones: funcion . funciones

    TOK_FUNCTION  desplazar e ir al estado 22

    $default  reduce usando la regla 18 (funciones)

    funciones  ir al estado 30
    funcion    ir al estado 24


Estado 25

    8 declaracion: clase identificadores ';' .

    $default  reduce usando la regla 8 (declaracion)


Estado 26

   16 identificadores: identificador ',' . identificadores

    TOK_IDENTIFICADOR  desplazar e ir al estado 18

    identificadores  ir al estado 31
    identificador    ir al estado 20


Estado 27

   14 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA . ']'

    ']'  desplazar e ir al estado 32


Estado 28

   19 funcion: TOK_FUNCTION tipo . identificador '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 18

    identificador  ir al estado 33


Estado 29

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main . sentencias final '}'

    TOK_IF             desplazar e ir al estado 34
    TOK_WHILE          desplazar e ir al estado 35
    TOK_SCANF          desplazar e ir al estado 36
    TOK_PRINTF         desplazar e ir al estado 37
    TOK_RETURN         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    sentencias        ir al estado 40
    sentencia         ir al estado 41
    sentencia_simple  ir al estado 42
    bloque            ir al estado 43
    asignacion        ir al estado 44
    elemento_vector   ir al estado 45
    condicional       ir al estado 46
    bucle             ir al estado 47
    lectura           ir al estado 48
    escritura         ir al estado 49
    retorno_funcion   ir al estado 50


Estado 30

   17 funciones: funcion funciones .

    $default  reduce usando la regla 17 (funciones)


Estado 31

   16 identificadores: identificador ',' identificadores .

    $default  reduce usando la regla 16 (identificadores)


Estado 32

   14 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']' .

    $default  reduce usando la regla 14 (clase_vector)


Estado 33

   19 funcion: TOK_FUNCTION tipo identificador . '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    '('  desplazar e ir al estado 51


Estado 34

   40 condicional: TOK_IF . '(' exp ')' '{' sentencias '}'
   41            | TOK_IF . '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '('  desplazar e ir al estado 52


Estado 35

   42 bucle: TOK_WHILE . '(' exp ')' '{' sentencias '}'

    '('  desplazar e ir al estado 53


Estado 36

   43 lectura: TOK_SCANF . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 54


Estado 37

   44 escritura: TOK_PRINTF . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 63
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 38

   45 retorno_funcion: TOK_RETURN . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 68
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 39

   37 asignacion: TOK_IDENTIFICADOR . '=' exp
   39 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'

    '['  desplazar e ir al estado 69
    '='  desplazar e ir al estado 70


Estado 40

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main sentencias . final '}'

    $default  reduce usando la regla 3 (final)

    final  ir al estado 71


Estado 41

   27 sentencias: sentencia .
   28           | sentencia . sentencias

    TOK_IF             desplazar e ir al estado 34
    TOK_WHILE          desplazar e ir al estado 35
    TOK_SCANF          desplazar e ir al estado 36
    TOK_PRINTF         desplazar e ir al estado 37
    TOK_RETURN         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    $default  reduce usando la regla 27 (sentencias)

    sentencias        ir al estado 72
    sentencia         ir al estado 41
    sentencia_simple  ir al estado 42
    bloque            ir al estado 43
    asignacion        ir al estado 44
    elemento_vector   ir al estado 45
    condicional       ir al estado 46
    bucle             ir al estado 47
    lectura           ir al estado 48
    escritura         ir al estado 49
    retorno_funcion   ir al estado 50


Estado 42

   29 sentencia: sentencia_simple . ';'

    ';'  desplazar e ir al estado 73


Estado 43

   30 sentencia: bloque .

    $default  reduce usando la regla 30 (sentencia)


Estado 44

   31 sentencia_simple: asignacion .

    $default  reduce usando la regla 31 (sentencia_simple)


Estado 45

   38 asignacion: elemento_vector . '=' exp

    '='  desplazar e ir al estado 74


Estado 46

   35 bloque: condicional .

    $default  reduce usando la regla 35 (bloque)


Estado 47

   36 bloque: bucle .

    $default  reduce usando la regla 36 (bloque)


Estado 48

   32 sentencia_simple: lectura .

    $default  reduce usando la regla 32 (sentencia_simple)


Estado 49

   33 sentencia_simple: escritura .

    $default  reduce usando la regla 33 (sentencia_simple)


Estado 50

   34 sentencia_simple: retorno_funcion .

    $default  reduce usando la regla 34 (sentencia_simple)


Estado 51

   19 funcion: TOK_FUNCTION tipo identificador '(' . parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT      desplazar e ir al estado 6
    TOK_BOOLEAN  desplazar e ir al estado 7

    $default  reduce usando la regla 21 (parametros_funcion)

    tipo                ir al estado 75
    parametros_funcion  ir al estado 76
    parametro_funcion   ir al estado 77


Estado 52

   40 condicional: TOK_IF '(' . exp ')' '{' sentencias '}'
   41            | TOK_IF '(' . exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 78
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 53

   42 bucle: TOK_WHILE '(' . exp ')' '{' sentencias '}'

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 79
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 54

   43 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    $default  reduce usando la regla 43 (lectura)


Estado 55

   39 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   54 exp: TOK_IDENTIFICADOR .
   75 identificador: TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 69

    '('       reduce usando la regla 75 (identificador)
    $default  reduce usando la regla 54 (exp)


Estado 56

   74 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce usando la regla 74 (constante_entera)


Estado 57

   72 constante_logica: TOK_TRUE .

    $default  reduce usando la regla 72 (constante_logica)


Estado 58

   73 constante_logica: TOK_FALSE .

    $default  reduce usando la regla 73 (constante_logica)


Estado 59

   53 exp: '!' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 80
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 60

   50 exp: '-' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 81
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 61

   56 exp: '(' . exp ')'
   57    | '(' . comparacion ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 82
    comparacion       ir al estado 83
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 62

   58 exp: elemento_vector .

    $default  reduce usando la regla 58 (exp)


Estado 63

   44 escritura: TOK_PRINTF exp .
   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89

    $default  reduce usando la regla 44 (escritura)


Estado 64

   55 exp: constante .

    $default  reduce usando la regla 55 (exp)


Estado 65

   70 constante: constante_logica .

    $default  reduce usando la regla 70 (constante)


Estado 66

   71 constante: constante_entera .

    $default  reduce usando la regla 71 (constante)


Estado 67

   59 exp: identificador . '(' lista_expresiones ')'

    '('  desplazar e ir al estado 90


Estado 68

   45 retorno_funcion: TOK_RETURN exp .
   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89

    $default  reduce usando la regla 45 (retorno_funcion)


Estado 69

   39 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 91
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 70

   37 asignacion: TOK_IDENTIFICADOR '=' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 92
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 71

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main sentencias final . '}'

    '}'  desplazar e ir al estado 93


Estado 72

   28 sentencias: sentencia sentencias .

    $default  reduce usando la regla 28 (sentencias)


Estado 73

   29 sentencia: sentencia_simple ';' .

    $default  reduce usando la regla 29 (sentencia)


Estado 74

   38 asignacion: elemento_vector '=' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 94
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 75

   24 parametro_funcion: tipo . identificador

    TOK_IDENTIFICADOR  desplazar e ir al estado 18

    identificador  ir al estado 95


Estado 76

   19 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion . ')' '{' declaraciones_funcion sentencias '}'

    ')'  desplazar e ir al estado 96


Estado 77

   20 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  desplazar e ir al estado 97

    $default  reduce usando la regla 23 (resto_parametros_funcion)

    resto_parametros_funcion  ir al estado 98


Estado 78

   40 condicional: TOK_IF '(' exp . ')' '{' sentencias '}'
   41            | TOK_IF '(' exp . ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'
   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89
    ')'      desplazar e ir al estado 99


Estado 79

   42 bucle: TOK_WHILE '(' exp . ')' '{' sentencias '}'
   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89
    ')'      desplazar e ir al estado 100


Estado 80

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp
   53    | '!' exp .

    '+'  desplazar e ir al estado 86
    '-'  desplazar e ir al estado 87
    '*'  desplazar e ir al estado 88
    '/'  desplazar e ir al estado 89

    $default  reduce usando la regla 53 (exp)


Estado 81

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   50    | '-' exp .
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    '*'  desplazar e ir al estado 88
    '/'  desplazar e ir al estado 89

    $default  reduce usando la regla 50 (exp)


Estado 82

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp
   56    | '(' exp . ')'
   64 comparacion: exp . TOK_IGUAL exp
   65            | exp . TOK_DISTINTO exp
   66            | exp . TOK_MENORIGUAL exp
   67            | exp . TOK_MAYORIGUAL exp
   68            | exp . '<' exp
   69            | exp . '>' exp

    TOK_AND         desplazar e ir al estado 84
    TOK_OR          desplazar e ir al estado 85
    TOK_IGUAL       desplazar e ir al estado 101
    TOK_DISTINTO    desplazar e ir al estado 102
    TOK_MENORIGUAL  desplazar e ir al estado 103
    TOK_MAYORIGUAL  desplazar e ir al estado 104
    '+'             desplazar e ir al estado 86
    '-'             desplazar e ir al estado 87
    '*'             desplazar e ir al estado 88
    '/'             desplazar e ir al estado 89
    ')'             desplazar e ir al estado 105
    '<'             desplazar e ir al estado 106
    '>'             desplazar e ir al estado 107


Estado 83

   57 exp: '(' comparacion . ')'

    ')'  desplazar e ir al estado 108


Estado 84

   51 exp: exp TOK_AND . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 109
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 85

   52 exp: exp TOK_OR . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 110
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 86

   46 exp: exp '+' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 111
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 87

   47 exp: exp '-' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 112
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 88

   49 exp: exp '*' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 113
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 89

   48 exp: exp '/' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 114
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 90

   59 exp: identificador '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    $default  reduce usando la regla 61 (lista_expresiones)

    elemento_vector    ir al estado 62
    exp                ir al estado 115
    lista_expresiones  ir al estado 116
    constante          ir al estado 64
    constante_logica   ir al estado 65
    constante_entera   ir al estado 66
    identificador      ir al estado 67


Estado 91

   39 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89
    ']'      desplazar e ir al estado 117


Estado 92

   37 asignacion: TOK_IDENTIFICADOR '=' exp .
   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89

    $default  reduce usando la regla 37 (asignacion)


Estado 93

    1 programa: TOK_MAIN '{' iniciar declaraciones dec_vars funciones wrt_main sentencias final '}' .

    $default  reduce usando la regla 1 (programa)


Estado 94

   38 asignacion: elemento_vector '=' exp .
   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89

    $default  reduce usando la regla 38 (asignacion)


Estado 95

   24 parametro_funcion: tipo identificador .

    $default  reduce usando la regla 24 (parametro_funcion)


Estado 96

   19 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' . '{' declaraciones_funcion sentencias '}'

    '{'  desplazar e ir al estado 118


Estado 97

   22 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT      desplazar e ir al estado 6
    TOK_BOOLEAN  desplazar e ir al estado 7

    tipo               ir al estado 75
    parametro_funcion  ir al estado 119


Estado 98

   20 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce usando la regla 20 (parametros_funcion)


Estado 99

   40 condicional: TOK_IF '(' exp ')' . '{' sentencias '}'
   41            | TOK_IF '(' exp ')' . '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '{'  desplazar e ir al estado 120


Estado 100

   42 bucle: TOK_WHILE '(' exp ')' . '{' sentencias '}'

    '{'  desplazar e ir al estado 121


Estado 101

   64 comparacion: exp TOK_IGUAL . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 122
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 102

   65 comparacion: exp TOK_DISTINTO . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 123
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 103

   66 comparacion: exp TOK_MENORIGUAL . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 124
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 104

   67 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 125
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 105

   56 exp: '(' exp ')' .

    $default  reduce usando la regla 56 (exp)


Estado 106

   68 comparacion: exp '<' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 126
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 107

   69 comparacion: exp '>' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 127
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 108

   57 exp: '(' comparacion ')' .

    $default  reduce usando la regla 57 (exp)


Estado 109

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   51    | exp TOK_AND exp .
   52    | exp . TOK_OR exp

    '+'  desplazar e ir al estado 86
    '-'  desplazar e ir al estado 87
    '*'  desplazar e ir al estado 88
    '/'  desplazar e ir al estado 89

    $default  reduce usando la regla 51 (exp)


Estado 110

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp
   52    | exp TOK_OR exp .

    '+'  desplazar e ir al estado 86
    '-'  desplazar e ir al estado 87
    '*'  desplazar e ir al estado 88
    '/'  desplazar e ir al estado 89

    $default  reduce usando la regla 52 (exp)


Estado 111

   46 exp: exp . '+' exp
   46    | exp '+' exp .
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    '*'  desplazar e ir al estado 88
    '/'  desplazar e ir al estado 89

    $default  reduce usando la regla 46 (exp)


Estado 112

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   47    | exp '-' exp .
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    '*'  desplazar e ir al estado 88
    '/'  desplazar e ir al estado 89

    $default  reduce usando la regla 47 (exp)


Estado 113

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   49    | exp '*' exp .
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    $default  reduce usando la regla 49 (exp)


Estado 114

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   48    | exp '/' exp .
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp

    $default  reduce usando la regla 48 (exp)


Estado 115

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp
   60 lista_expresiones: exp . resto_lista_expresiones

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89
    ','      desplazar e ir al estado 128

    $default  reduce usando la regla 63 (resto_lista_expresiones)

    resto_lista_expresiones  ir al estado 129


Estado 116

   59 exp: identificador '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 130


Estado 117

   39 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce usando la regla 39 (elemento_vector)


Estado 118

   19 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' '{' . declaraciones_funcion sentencias '}'

    TOK_INT      desplazar e ir al estado 6
    TOK_BOOLEAN  desplazar e ir al estado 7
    TOK_ARRAY    desplazar e ir al estado 8

    $default  reduce usando la regla 26 (declaraciones_funcion)

    declaraciones          ir al estado 131
    declaracion            ir al estado 10
    clase                  ir al estado 11
    clase_escalar          ir al estado 12
    tipo                   ir al estado 13
    clase_vector           ir al estado 14
    declaraciones_funcion  ir al estado 132


Estado 119

   22 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  desplazar e ir al estado 97

    $default  reduce usando la regla 23 (resto_parametros_funcion)

    resto_parametros_funcion  ir al estado 133


Estado 120

   40 condicional: TOK_IF '(' exp ')' '{' . sentencias '}'
   41            | TOK_IF '(' exp ')' '{' . sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_IF             desplazar e ir al estado 34
    TOK_WHILE          desplazar e ir al estado 35
    TOK_SCANF          desplazar e ir al estado 36
    TOK_PRINTF         desplazar e ir al estado 37
    TOK_RETURN         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    sentencias        ir al estado 134
    sentencia         ir al estado 41
    sentencia_simple  ir al estado 42
    bloque            ir al estado 43
    asignacion        ir al estado 44
    elemento_vector   ir al estado 45
    condicional       ir al estado 46
    bucle             ir al estado 47
    lectura           ir al estado 48
    escritura         ir al estado 49
    retorno_funcion   ir al estado 50


Estado 121

   42 bucle: TOK_WHILE '(' exp ')' '{' . sentencias '}'

    TOK_IF             desplazar e ir al estado 34
    TOK_WHILE          desplazar e ir al estado 35
    TOK_SCANF          desplazar e ir al estado 36
    TOK_PRINTF         desplazar e ir al estado 37
    TOK_RETURN         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    sentencias        ir al estado 135
    sentencia         ir al estado 41
    sentencia_simple  ir al estado 42
    bloque            ir al estado 43
    asignacion        ir al estado 44
    elemento_vector   ir al estado 45
    condicional       ir al estado 46
    bucle             ir al estado 47
    lectura           ir al estado 48
    escritura         ir al estado 49
    retorno_funcion   ir al estado 50


Estado 122

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp
   64 comparacion: exp TOK_IGUAL exp .

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89

    $default  reduce usando la regla 64 (comparacion)


Estado 123

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp
   65 comparacion: exp TOK_DISTINTO exp .

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89

    $default  reduce usando la regla 65 (comparacion)


Estado 124

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp
   66 comparacion: exp TOK_MENORIGUAL exp .

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89

    $default  reduce usando la regla 66 (comparacion)


Estado 125

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp
   67 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89

    $default  reduce usando la regla 67 (comparacion)


Estado 126

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp
   68 comparacion: exp '<' exp .

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89

    $default  reduce usando la regla 68 (comparacion)


Estado 127

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp
   69 comparacion: exp '>' exp .

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89

    $default  reduce usando la regla 69 (comparacion)


Estado 128

   62 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_IDENTIFICADOR     desplazar e ir al estado 55
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 56
    TOK_TRUE              desplazar e ir al estado 57
    TOK_FALSE             desplazar e ir al estado 58
    '!'                   desplazar e ir al estado 59
    '-'                   desplazar e ir al estado 60
    '('                   desplazar e ir al estado 61

    elemento_vector   ir al estado 62
    exp               ir al estado 136
    constante         ir al estado 64
    constante_logica  ir al estado 65
    constante_entera  ir al estado 66
    identificador     ir al estado 67


Estado 129

   60 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce usando la regla 60 (lista_expresiones)


Estado 130

   59 exp: identificador '(' lista_expresiones ')' .

    $default  reduce usando la regla 59 (exp)


Estado 131

   25 declaraciones_funcion: declaraciones .

    $default  reduce usando la regla 25 (declaraciones_funcion)


Estado 132

   19 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' '{' declaraciones_funcion . sentencias '}'

    TOK_IF             desplazar e ir al estado 34
    TOK_WHILE          desplazar e ir al estado 35
    TOK_SCANF          desplazar e ir al estado 36
    TOK_PRINTF         desplazar e ir al estado 37
    TOK_RETURN         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    sentencias        ir al estado 137
    sentencia         ir al estado 41
    sentencia_simple  ir al estado 42
    bloque            ir al estado 43
    asignacion        ir al estado 44
    elemento_vector   ir al estado 45
    condicional       ir al estado 46
    bucle             ir al estado 47
    lectura           ir al estado 48
    escritura         ir al estado 49
    retorno_funcion   ir al estado 50


Estado 133

   22 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce usando la regla 22 (resto_parametros_funcion)


Estado 134

   40 condicional: TOK_IF '(' exp ')' '{' sentencias . '}'
   41            | TOK_IF '(' exp ')' '{' sentencias . '}' TOK_ELSE '{' sentencias '}'

    '}'  desplazar e ir al estado 138


Estado 135

   42 bucle: TOK_WHILE '(' exp ')' '{' sentencias . '}'

    '}'  desplazar e ir al estado 139


Estado 136

   46 exp: exp . '+' exp
   47    | exp . '-' exp
   48    | exp . '/' exp
   49    | exp . '*' exp
   51    | exp . TOK_AND exp
   52    | exp . TOK_OR exp
   62 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_AND  desplazar e ir al estado 84
    TOK_OR   desplazar e ir al estado 85
    '+'      desplazar e ir al estado 86
    '-'      desplazar e ir al estado 87
    '*'      desplazar e ir al estado 88
    '/'      desplazar e ir al estado 89
    ','      desplazar e ir al estado 128

    $default  reduce usando la regla 63 (resto_lista_expresiones)

    resto_lista_expresiones  ir al estado 140


Estado 137

   19 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' '{' declaraciones_funcion sentencias . '}'

    '}'  desplazar e ir al estado 141


Estado 138

   40 condicional: TOK_IF '(' exp ')' '{' sentencias '}' .
   41            | TOK_IF '(' exp ')' '{' sentencias '}' . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  desplazar e ir al estado 142

    $default  reduce usando la regla 40 (condicional)


Estado 139

   42 bucle: TOK_WHILE '(' exp ')' '{' sentencias '}' .

    $default  reduce usando la regla 42 (bucle)


Estado 140

   62 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce usando la regla 62 (resto_lista_expresiones)


Estado 141

   19 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}' .

    $default  reduce usando la regla 19 (funcion)


Estado 142

   41 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE . '{' sentencias '}'

    '{'  desplazar e ir al estado 143


Estado 143

   41 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' . sentencias '}'

    TOK_IF             desplazar e ir al estado 34
    TOK_WHILE          desplazar e ir al estado 35
    TOK_SCANF          desplazar e ir al estado 36
    TOK_PRINTF         desplazar e ir al estado 37
    TOK_RETURN         desplazar e ir al estado 38
    TOK_IDENTIFICADOR  desplazar e ir al estado 39

    sentencias        ir al estado 144
    sentencia         ir al estado 41
    sentencia_simple  ir al estado 42
    bloque            ir al estado 43
    asignacion        ir al estado 44
    elemento_vector   ir al estado 45
    condicional       ir al estado 46
    bucle             ir al estado 47
    lectura           ir al estado 48
    escritura         ir al estado 49
    retorno_funcion   ir al estado 50


Estado 144

   41 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias . '}'

    '}'  desplazar e ir al estado 145


Estado 145

   41 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}' .

    $default  reduce usando la regla 41 (condicional)
